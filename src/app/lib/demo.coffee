_ = require 'lodash'

# quebraLimpa = (csv) ->
#   csv.split('\n').map( (row)->
#     row.trim()
#   ).split(';').map( (cell)->
#     cell.trim().replace('"', '')
#   )
# popFaixaPorUf = quebraLimpa(require './datasus-pop/faixa-uf.csv')
# popRelSexoFaixaPorUf = quebraLimpa(require './datasus-pop/rel-sexo-faixa-uf.csv')

class PopulacaoEmFaixas

      constructor:->

        @faixaPorUf = [
          ["Faixa Etária", "RO", "AC", "AM", "RR", "PA", "AP", "TO", "MA", "PI", "CE", "RN", "PB", "PE", "AL", "SE", "BA", "MG", "ES", "RJ", "SP", "PR", "SC", "RS", "MS", "MT", "GO", "DF", "Total"],
          ["Menor 1 ano", "1,60", "1,99", "2,11", "2,09", "1,88", "2,11", "1,71", "1,83", "1,50", "1,49", "1,46", "1,53", "1,49", "1,71", "1,57", "1,46", "1,27", "1,39", "1,22", "1,29", "1,38", "1,31", "1,20", "1,59", "1,58", "1,44", "1,47", "1,42"],
          ["1 a 4 anos", "6,58", "8,56", "8,55", "8,48", "7,84", "8,34", "7,16", "7,84", "6,43", "6,14", "6,00", "6,17", "6,20", "7,01", "6,61", "6,10", "5,24", "5,56", "4,96", "5,19", "5,45", "5,19", "4,83", "6,24", "6,46", "5,85", "5,89", "5,81"],
          ["5 a 9 anos", "8,95", "11,20", "11,03", "10,96", "10,31", "10,85", "9,47", "10,25", "8,74", "8,24", "8,08", "8,34", "8,46", "9,62", "8,66", "8,49", "7,29", "7,54", "6,84", "6,93", "7,36", "6,99", "6,77", "8,08", "8,37", "7,87", "7,81", "7,85"],
          ["10 a 14 anos", "10,02", "11,96", "11,49", "11,52", "11,03", "11,83", "10,43", "11,03", "9,94", "10,02", "9,27", "9,26", "9,50", "10,84", "10,07", "9,56", "8,61", "8,60", "8,16", "8,06", "8,70", "8,32", "8,06", "9,07", "9,28", "8,84", "8,51", "9,00"],
          ["15 a 19 anos", "9,98", "10,49", "10,47", "10,43", "10,38", "10,94", "10,07", "10,38", "9,68", "10,02", "9,38", "9,37", "9,25", "10,03", "9,77", "9,47", "8,77", "8,58", "7,94", "8,01", "8,89", "8,73", "8,19", "9,23", "9,37", "8,89", "8,59", "8,91"],
          ["20 a 24 anos", "9,69", "9,59", "9,75", "9,68", "9,88", "10,24", "9,53", "9,99", "9,67", "9,73", "9,77", "9,20", "9,29", "9,30", "9,71", "9,31", "8,85", "9,19", "8,15", "8,82", "8,63", "9,05", "8,14", "8,98", "9,42", "9,23", "9,56", "9,04"],
          ["25 a 29 anos", "9,36", "9,19", "9,28", "9,59", "9,33", "9,53", "9,05", "9,05", "8,83", "8,79", "9,09", "8,70", "8,86", "8,72", "9,16", "9,34", "8,70", "9,18", "8,53", "9,18", "8,43", "9,07", "8,36", "8,87", "9,36", "9,27", "10,44", "8,97"],
          ["30 a 34 anos", "8,51", "8,06", "8,20", "8,21", "8,14", "8,26", "8,27", "7,61", "7,92", "7,78", "7,99", "7,91", "8,15", "7,90", "8,24", "8,35", "8,14", "8,53", "8,27", "8,62", "8,01", "8,18", "7,56", "8,19", "8,75", "8,87", "9,84", "8,25"],
          ["35 a 39 anos", "7,46", "6,51", "6,68", "6,60", "6,79", "6,98", "6,90", "6,14", "6,62", "6,82", "7,06", "6,91", "7,22", "6,79", "7,18", "7,01", "7,23", "7,36", "7,44", "7,72", "7,54", "7,54", "6,97", "7,41", "7,76", "7,89", "8,28", "7,28"],
          ["40 a 44 anos", "6,76", "5,44", "5,51", "5,62", "5,74", "5,57", "6,14", "5,41", "6,09", "6,40", "6,79", "6,47", "6,56", "6,19", "6,57", "6,45", "7,01", "6,97", "7,15", "7,22", "7,34", "7,43", "7,11", "6,88", "7,03", "7,18", "7,31", "6,82"],
          ["45 a 49 anos", "5,80", "4,29", "4,52", "4,78", "4,67", "4,33", "5,15", "4,64", "5,43", "5,67", "6,03", "5,69", "5,71", "5,18", "5,51", "5,57", "6,61", "6,48", "6,89", "6,67", "6,70", "7,07", "7,22", "6,32", "6,08", "6,19", "6,11", "6,20"],
          ["50 a 54 anos", "4,60", "3,53", "3,61", "3,76", "3,88", "3,41", "4,20", "3,91", "4,61", "4,43", "4,62", "4,57", "4,74", "4,28", "4,39", "4,74", "5,78", "5,67", "6,25", "5,90", "5,67", "5,87", "6,48", "5,21", "4,90", "5,09", "4,79", "5,32"],
          ["55 a 59 anos", "3,48", "2,79", "2,76", "2,81", "3,07", "2,48", "3,42", "3,29", "3,89", "3,70", "3,63", "3,90", "3,90", "3,57", "3,57", "3,81", "4,70", "4,56", "5,18", "4,82", "4,68", "4,75", "5,47", "4,16", "3,74", "4,04", "3,72", "4,34"],
          ["60 a 64 anos", "2,51", "2,07", "2,00", "2,01", "2,30", "1,67", "2,67", "2,62", "3,18", "3,17", "3,27", "3,45", "3,28", "2,85", "2,85", "3,12", "3,65", "3,28", "4,09", "3,72", "3,66", "3,58", "4,35", "3,14", "2,75", "3,10", "2,72", "3,41"],
          ["65 a 69 anos", "1,81", "1,58", "1,48", "1,33", "1,77", "1,32", "2,05", "2,09", "2,48", "2,43", "2,40", "2,69", "2,50", "2,17", "2,13", "2,43", "2,76", "2,40", "2,98", "2,69", "2,73", "2,52", "3,21", "2,38", "1,99", "2,31", "1,87", "2,54"],
          ["70 a 74 anos", "1,30", "1,10", "1,05", "0,92", "1,26", "0,89", "1,58", "1,62", "2,00", "2,02", "1,96", "2,27", "1,98", "1,58", "1,58", "1,88", "2,17", "1,87", "2,35", "2,08", "2,05", "1,87", "2,45", "1,80", "1,42", "1,73", "1,39", "1,96"],
          ["75 a 79 anos", "0,83", "0,75", "0,71", "0,57", "0,83", "0,59", "1,05", "1,08", "1,34", "1,33", "1,28", "1,46", "1,28", "1,04", "1,07", "1,28", "1,52", "1,35", "1,68", "1,46", "1,38", "1,25", "1,75", "1,19", "0,88", "1,11", "0,83", "1,34"],
          ["80 anos e mais", "0,77", "0,89", "0,80", "0,63", "0,90", "0,65", "1,15", "1,24", "1,64", "1,82", "1,91", "2,12", "1,62", "1,23", "1,36", "1,66", "1,68", "1,49", "1,91", "1,62", "1,39", "1,29", "1,89", "1,27", "0,85", "1,11", "0,88", "1,54"],
          ["Total", "100,00", "100,00", "100,00", "100,00", "100,00", "100,00", "100,00", "100,00", "100,00", "100,00", "100,00", "100,00", "100,00", "100,00", "100,00", "100,00", "100,00", "100,00", "100,00", "100,00", "100,00", "100,00", "100,00", "100,00", "100,00", "100,00", "100,00", "100,00"]
        ]

        @faixaPorRelSexo = [
          ["Faixa Etária", "RO", "AC", "AM", "RR", "PA", "AP", "TO", "MA", "PI", "CE", "RN", "PB", "PE", "AL", "SE", "BA", "MG", "ES", "RJ", "SP", "PR", "SC", "RS", "MS", "MT", "GO", "DF", "Total"],
          ["Menor 1 ano", "103,5", "104,4", "102,9", "103,1", "103,4", "101,2", "103,1", "101,8", "104,1", "103,7", "104,4", "104,6", "103,5", "102,2", "102,9", "103,3", "103,0", "104,3", "103,4", "103,3", "103,7", "102,8", "103,6", "101,9", "104,1", "103,5", "102,0", "103,3"],
          ["1 a 4 anos", "102,7", "104,1", "103,2", "104,8", "104,0", "104,6", "102,4", "103,4", "104,1", "104,1", "104,1", "103,6", "103,5", "103,0", "104,0", "103,2", "103,7", "102,9", "102,8", "103,7", "103,4", "104,4", "103,5", "103,9", "103,4", "103,6", "103,3", "103,6"],
          ["5 a 9 anos", "103,8", "104,6", "104,1", "104,7", "103,7", "104,2", "104,9", "104,2", "104,1", "103,8", "104,1", "104,1", "103,4", "103,4", "103,5", "103,8", "103,3", "104,0", "103,3", "103,8", "103,5", "104,3", "104,0", "104,6", "104,7", "104,6", "103,0", "103,8"],
          ["10 a 14 anos", "104,3", "102,7", "103,0", "102,9", "103,6", "101,6", "104,7", "102,8", "104,0", "103,6", "103,9", "103,3", "102,8", "102,2", "103,5", "103,6", "103,4", "103,1", "103,1", "103,1", "104,0", "104,0", "103,7", "103,5", "105,0", "103,4", "102,3", "103,4"],
          ["15 a 19 anos", "102,0", "99,7", "100,4", "102,1", "101,7", "99,5", "103,1", "101,1", "101,3", "101,0", "101,7", "101,4", "100,3", "99,9", "100,3", "101,4", "102,0", "100,9", "101,0", "101,9", "102,4", "102,7", "102,1", "102,0", "103,0", "101,3", "97,2", "101,5"],
          ["20 a 24 anos", "103,0", "100,1", "100,4", "100,2", "100,6", "98,7", "101,4", "99,1", "97,7", "97,7", "100,3", "97,9", "97,1", "94,4", "97,2", "98,5", "101,7", "101,3", "98,5", "101,8", "100,5", "103,2", "101,1", "102,4", "103,7", "101,6", "96,0", "100,2"],
          ["25 a 29 anos", "100,6", "98,0", "99,4", "98,2", "99,4", "95,5", "99,6", "97,4", "96,2", "96,3", "98,4", "96,2", "94,6", "92,6", "94,3", "96,4", "99,8", "99,5", "95,1", "98,6", "98,4", "102,1", "99,3", "99,0", "103,0", "99,3", "90,5", "97,9"],
          ["30 a 34 anos", "99,7", "97,2", "99,6", "98,2", "100,9", "95,9", "98,4", "96,5", "94,3", "94,7", "96,3", "94,3", "92,6", "91,1", "92,0", "95,8", "98,1", "97,3", "92,9", "95,9", "96,4", "100,6", "97,4", "97,9", "101,6", "97,4", "88,2", "96,1"],
          ["35 a 39 anos", "98,8", "99,6", "100,6", "100,5", "101,8", "98,6", "102,7", "96,2", "93,6", "93,0", "94,2", "92,4", "90,4", "89,5", "90,6", "94,8", "96,2", "95,7", "90,9", "94,8", "95,4", "99,1", "96,6", "97,0", "102,3", "96,5", "88,8", "95,0"],
          ["40 a 44 anos", "106,1", "99,8", "104,7", "106,3", "103,5", "102,2", "102,1", "95,0", "92,5", "91,7", "93,0", "90,8", "88,6", "89,4", "91,4", "94,7", "95,7", "96,0", "90,5", "94,0", "94,4", "98,2", "94,3", "96,7", "104,6", "96,4", "89,7", "94,5"],
          ["45 a 49 anos", "108,7", "100,3", "103,7", "107,4", "103,3", "104,2", "104,6", "93,5", "91,1", "91,1", "91,4", "90,8", "87,2", "89,6", "90,4", "93,9", "94,3", "94,6", "88,0", "90,6", "92,5", "96,2", "93,2", "95,4", "106,5", "95,3", "85,8", "92,7"],
          ["50 a 54 anos", "107,6", "98,8", "102,4", "109,2", "102,2", "105,0", "103,9", "92,2", "89,1", "86,6", "88,5", "86,8", "84,6", "87,0", "88,8", "92,0", "93,8", "93,9", "85,9", "89,3", "91,2", "95,6", "92,2", "95,7", "107,6", "94,4", "83,3", "91,1"],
          ["55 a 59 anos", "106,6", "99,8", "101,0", "113,3", "101,3", "103,6", "106,8", "91,6", "87,0", "84,8", "84,8", "82,8", "80,4", "84,8", "85,6", "89,6", "92,0", "93,3", "82,5", "88,0", "90,4", "94,1", "90,3", "96,0", "108,1", "93,5", "81,9", "89,2"],
          ["60 a 64 anos", "111,2", "102,7", "98,5", "119,6", "101,9", "103,6", "109,3", "95,2", "89,6", "85,6", "83,8", "81,5", "80,3", "86,8", "87,3", "89,5", "90,2", "90,1", "79,9", "84,9", "89,8", "91,7", "87,6", "95,6", "108,0", "94,4", "79,0", "87,7"],
          ["65 a 69 anos", "109,2", "98,2", "98,9", "115,0", "99,5", "98,5", "111,2", "95,9", "90,1", "84,6", "81,5", "79,3", "77,0", "84,5", "82,8", "86,4", "86,7", "85,9", "76,3", "81,8", "88,3", "87,4", "83,0", "95,4", "109,0", "94,5", "78,6", "85,0"],
          ["70 a 74 anos", "112,6", "102,1", "93,4", "112,2", "96,1", "95,6", "109,8", "92,8", "84,7", "79,8", "78,7", "74,9", "73,2", "79,9", "77,0", "82,1", "82,2", "81,8", "70,9", "76,7", "86,9", "81,0", "75,7", "97,0", "109,1", "92,5", "79,2", "80,4"],
          ["75 a 79 anos", "108,6", "104,6", "90,8", "107,5", "92,0", "89,0", "110,5", "93,8", "82,9", "76,7", "74,0", "72,2", "69,3", "74,3", "70,6", "76,3", "76,6", "77,2", "63,1", "69,5", "79,9", "71,9", "65,3", "92,0", "106,7", "88,9", "71,6", "74,0"],
          ["80 anos e mais", "109,1", "100,6", "76,6", "89,4", "75,6", "71,5", "102,8", "81,1", "77,3", "72,8", "71,9", "69,5", "65,0", "69,6", "65,2", "69,2", "63,1", "66,2", "49,5", "56,2", "68,1", "58,3", "50,5", "81,7", "96,7", "82,3", "57,8", "62,9"],
          ["Total", "103,6", "100,8", "101,3", "103,3", "101,7", "100,2", "103,1", "98,4", "96,1", "95,1", "95,7", "93,9", "92,7", "94,0", "94,5", "96,4", "96,9", "97,1", "91,2", "94,8", "96,6", "98,5", "94,8", "99,3", "104,3", "98,7", "91,6", "96,0"]
        ]

        @faixas = _(@faixaPorUf.map((v,k,l)-> v[0] unless [1..l.length-2].indexOf(k) == -1 )).compact().__wrapped__

        @ufs =
          "RO": "Rondônia"
          "AC": "Acre"
          "AM": "Amazonas"
          "RR": "Roraima"
          "PA": "Pará"
          "AP": "Amapá"
          "TO": "Tocantins"
          "MA": "Maranhão"
          "PI": "Piauí"
          "CE": "Ceará"
          "RN": "Rio Grande do Norte"
          "PB": "Paraíba"
          "PE": "Pernambuco"
          "AL": "Alagoas"
          "SE": "Sergipe"
          "BA": "Bahia"
          "MG": "Minas Gerais"
          "ES": "Espírito Santo"
          "RJ": "Rio de Janeiro"
          "SP": "São Paulo"
          "PR": "Paraná"
          "SC": "Santa Catarina"
          "RS": "Rio Grande do Sul"
          "MS": "Mato Grosso do Sul"
          "MT": "Mato Grosso"
          "GO": "Goiás"
          "DF": "Distrito Federal"

        # console.log @faixaPorUf, @faixa, @faixaPorRelSexo, @ufs

      getFaixas:-> @faixas

      getUfs:-> @ufs

      getUfBySigla: (sigla)-> @ufs[sigla.toUpperCase()]

      getFaixasPorUf: (uf)->
        ufCol = @faixaPorRelSexo[0].indexOf uf.toUpperCase()
        ufVals = []
        ufVals.push faixa[ufCol] for faixa in @faixaPorUf
        @getMiolo ufVals, (v)->
          try
            v = v.replace /,/gm, '.'
          catch error

          (parseFloat v) / 100

      getFaixasDestSexoPorUf: (uf)->
        ufCol = @faixaPorRelSexo[0].indexOf uf.toUpperCase()
        ufVals = []
        ufVals.push faixa[ufCol] for faixa in @faixaPorRelSexo
        @getMiolo ufVals, (v)->
          try
            v = v.replace /,/gm, '.'
          catch error

      getData: (uf, locPop)->
        popDist = @getFaixasPorUf(uf)
        sexDist = @getFaixasDestSexoPorUf(uf)
        # console.log locPop
        faix = []
        for k of @faixas
          total = locPop * popDist[k]
          genero = @propPorGen sexDist[k], total
          perF = genero.F * 100
          perM = 100 - (genero.F * 100)
          faix.push
            nome: @faixas[k]
            total: total
            perTotal: popDist[k] * 100
            totM: perM * total / 100
            perM: perM
            totF: perF * total / 100
            perF: perF

        upperSigla = do uf.toUpperCase

        estado: @ufs[upperSigla]
        sigla: upperSigla
        populacao:
          total: locPop
          feminino: faix.reduce(
            (sum, faixa)-> sum += faixa.totF; sum
          , 0)
          masculino: faix.reduce(
            (sum, faixa)-> sum += faixa.totM
          , 0)
        faixas: faix

      propPorGen: (MalesPerFemale)->
        total = MalesPerFemale + 50
        totalM = (MalesPerFemale / total)
        totalF = (50 / total)
        M: totalM , F: totalF

      getMiolo: (arr)->
        # console.log arguments
        arg = arguments[1]
        ret = arr[1...-1]
        if typeof arg is 'function'
        then ret.map arg
        else ret

      findKey: (obj, value)->
        # console.log arguments
        for k, v of obj
          # console.log value, v, k
          eh = v is value
          # console.log """
          #{v} is #{value} ? #{eh}
          """
          return k if eh

module.exports = PopulacaoEmFaixas