// Generated by CoffeeScript 1.9.0
(function() {
  var __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __hasProp = {}.hasOwnProperty;

  define(['js/dummy', 'js/ubsCollection', 'js/ubsModel', 'js/ubsInfoItemView', 'js/selectViews'], function(dummy, UbsCollection, UbsModel, UbsInfoItemView, SelectViews) {
    var UbsFormLayout, rawUfs;
    rawUfs = _.map(staticData.estados, function(item) {
      return _.partial(_.pick, item).apply(null, ['sigla', 'nome']);
    });
    rawUfs = rawUfs.map(function(i) {
      return {
        value: i.sigla,
        text: i.nome
      };
    });
    return UbsFormLayout = (function(_super) {
      __extends(UbsFormLayout, _super);

      function UbsFormLayout() {
        return UbsFormLayout.__super__.constructor.apply(this, arguments);
      }

      UbsFormLayout.prototype.tagName = 'form';

      UbsFormLayout.prototype.template = '#local-template';

      UbsFormLayout.prototype.onRender = function() {
        this.addRegions({
          'uf': '.uf',
          'muni': '.muni',
          'ubs': '.ubs',
          'info': '.info'
        });
        this.uf.show(new SelectViews.Estado({
          collection: new Backbone.Collection([dummy()].concat(rawUfs))
        }));
        this.muni.show(new SelectViews.Municipio({
          collection: new Backbone.Collection([dummy('Escolha um estado.')])
        }));
        return this.ubs.show(new SelectViews.Ubs({
          collection: new UbsCollection([dummy('Escolha um estado e um município.')])
        }));
      };

      UbsFormLayout.prototype.childEvents = {
        'mostra:municipiosDeUf': function(child, uf) {
          var cidades, estado, muniColl, ubsColl;
          muniColl = this.muni.currentView.collection;
          ubsColl = this.ubs.currentView.collection;
          ubsColl.reset([dummy('Escolha um estado e um município.')]);
          if (uf === '-1') {
            return muniColl.reset([dummy('Escolha um estado.')]);
          }
          estado = _.findWhere(staticData.estados, {
            sigla: uf.toUpperCase()
          });
          cidades = estado.cidades.map(function(i) {
            return {
              value: i.ibge,
              text: i.nome
            };
          });
          return muniColl.reset([dummy()].concat(cidades));
        },
        'mostra:ubsDeMun': function(child, ibge) {
          var ubsColl;
          ubsColl = this.ubs.currentView.collection;
          if (ibge === '-1') {
            return ubsColl.reset([dummy('Escolha um estado e um município.')]);
          }
          ubsColl.reset([dummy('Carregando...')]);
          ubsColl.ibge = ibge;
          return ubsColl.fetch();
        },
        'mostra:ubs': function(child, cnes) {
          var self, ubsModel;
          self = this;
          ubsModel = new UbsModel;
          ubsModel.set({
            'id': cnes
          });
          return ubsModel.fetch({
            success: function(model) {
              return self.info.show(new UbsInfoItemView({
                model: model
              }));
            }
          });
        }
      };

      return UbsFormLayout;

    })(Marionette.LayoutView);
  });

}).call(this);
