// Generated by CoffeeScript 2.7.0
define(['./OfertaInscricaoItem'], function(OfertaInscricaoItem) {
  var HomeLayout;
  HomeLayout = (function() {
    class HomeLayout extends Marionette.LayoutView {
      initialize() {}

      onRender() {
        var self;
        self = this;
        self.obtemOfertasAbertas();
        return self.verificaEnquetes();
      }

      verificaEnquetes() {
        if (App.enquetes && App.user) {
          if (App.user.enquetes) {
            if (App.user.enquetes[App.moduloId]) {
              // console.log 'tem user enquetes cadastro parar o modulo',[App.moduloId], App.user.enquetes[App.moduloId]
              if (App.user.enquetes[App.moduloId]['cadastro']) {
                return;
              }
            }
          }
          // console.log 'tem user enquetes cadastro', App.user.enquetes[App.moduloId]['cadastro']
          return Backbone.history.navigate('#comp/enquetes/intro/' + App.user.cpf + '/tipo/cadastro', {
            trigger: true
          });
        }
      }

      obtemOfertasAbertas() {
        var self;
        self = this;
        self.ui.inscricoes.empty();
        // console.log App.user, window.modulo.ofertasAbertas, 'window.modulo.ofertasAbertas'
        if (App.user) {
          return window.modulo.ofertasAbertas.forEach(function(o) {
            var conteudo, view;
            conteudo = o.conteudo;
            conteudo = conteudo[0].toUpperCase() + conteudo.slice(1);
            view = new OfertaInscricaoItem({
              model: new Backbone.Model({
                'nucleo': conteudo,
                'id_arouca': o.id_arouca,
                'tipo': o.tipo,
                'nome': o.nome
              })
            });
            return self.ui.inscricoes.append(view.render().el);
          });
        } else {
          return self.ui.inscricoes.append("<div class='col-xs-12 col-sm-12 col-md-12 col-lg-12 text-center'> <button class='btn btn-success display-4 gotoForm'>Inscreva-se aqui</button> </div>");
        }
      }

      gotoForm() {
        return Backbone.history.navigate('#comp/cadastro', {
          trigger: true
        });
      }

      gotoUnidade(e) {
        if (!App.user) {
          return this.gotoForm();
        }
      }

      gotoCasos() {
        if (!App.user) {
          this.gotoForm();
        }
        return Backbone.history.navigate('#comp/selecao-progresso', {
          trigger: true
        });
      }

      gotoCalculadoras() {
        return Backbone.history.navigate('#comp/calculadoras', {
          trigger: true
        });
      }

      gotoMaterial() {
        return Backbone.history.navigate('#comp/materiais', {
          trigger: true
        });
      }

      gotoTestes() {
        if (!App.user) {
          this.gotoForm();
        }
        return Backbone.history.navigate('#comp/selecao-testes-progresso', {
          trigger: true
        });
      }

      gotoInicialInterdisciplinar() {
        var _id, inicialDaPro;
        if (!App.user) {
          this.gotoForm();
        }
        inicialDaPro = App.testes.filter(function(d) {
          return /inicial/img.test(d.get('titulo'));
        })[0];
        if (!inicialDaPro) {
          Backbone.history.navigate("comp/selecao-testes-progresso", {
            trigger: true
          });
        }
        _id = inicialDaPro.get('_id');
        return Backbone.history.navigate(`comp/teste-progresso/${_id}`, {
          trigger: true
        });
      }

      gotoInicialEnfermagem() {
        var _id, inicialDaPro, proMap, uPro;
        if (!App.user) {
          this.gotoForm();
        }
        proMap = {
          '1': 1,
          '2': 0,
          '3': 2
        };
        uPro = proMap['1'];
        inicialDaPro = App.testes.filter(function(d) {
          return /inicial/img.test(d.get('titulo')) && d.get('pro')[uPro];
        })[0];
        if (!inicialDaPro) {
          Backbone.history.navigate("comp/selecao-testes-progresso", {
            trigger: true
          });
        }
        _id = inicialDaPro.get('_id');
        return Backbone.history.navigate(`comp/teste-progresso/${_id}`, {
          trigger: true
        });
      }

      gotoInicialMedicina() {
        var _id, inicialDaPro, proMap, uPro;
        if (!App.user) {
          this.gotoForm();
        }
        proMap = {
          '1': 1,
          '2': 0,
          '3': 2
        };
        uPro = proMap['2'];
        inicialDaPro = App.testes.filter(function(d) {
          return /inicial/img.test(d.get('titulo')) && d.get('pro')[uPro];
        })[0];
        if (!inicialDaPro) {
          Backbone.history.navigate("comp/selecao-testes-progresso", {
            trigger: true
          });
        }
        _id = inicialDaPro.get('_id');
        return Backbone.history.navigate(`comp/teste-progresso/${_id}`, {
          trigger: true
        });
      }

      gotoInicialOdontologia() {
        var _id, inicialDaPro, proMap, uPro;
        if (!App.user) {
          this.gotoForm();
        }
        proMap = {
          '1': 1,
          '2': 0,
          '3': 2
        };
        uPro = proMap['3'];
        inicialDaPro = App.testes.filter(function(d) {
          return /inicial/img.test(d.get('titulo')) && d.get('pro')[uPro];
        })[0];
        if (!inicialDaPro) {
          Backbone.history.navigate("comp/selecao-testes-progresso", {
            trigger: true
          });
        }
        _id = inicialDaPro.get('_id');
        return Backbone.history.navigate(`comp/teste-progresso/${_id}`, {
          trigger: true
        });
      }

      gotoFinalInterdisciplinar() {
        var _id, finalDaPro;
        if (!App.user) {
          this.gotoForm();
        }
        console.log(App.masterFinalLockInterdisciplinar(), 'App.masterFinalLockInterdisciplinar');
        if (App.masterFinalLockInterdisciplinar()) {
          return Backbone.history.navigate("comp/home/teste-bloqueado", {
            trigger: true
          });
        }
        finalDaPro = App.testes.filter(function(d) {
          return /final/img.test(d.get('titulo'));
        })[0];
        console.log(App.masterFinalLockInterdisciplinar(), 'App.masterFinalLockInterdisciplinar', finalDaPro);
        _id = finalDaPro.get('_id');
        console.log(App.masterFinalLockInterdisciplinar(), 'App.masterFinalLockInterdisciplinar', finalDaPro, _id);
        return Backbone.history.navigate(`comp/teste-progresso/${_id}`, {
          trigger: true
        });
      }

      gotoFinalEnfermagem() {
        var _id, finalDaPro, proMap, uPro;
        if (!App.user) {
          this.gotoForm();
        }
        proMap = {
          '1': 1,
          '2': 0,
          '3': 2,
          '0': 9
        };
        uPro = proMap['1'];
        if (App.masterFinalLockEnfermagem()) {
          return Backbone.history.navigate("comp/home/teste-bloqueado", {
            trigger: true
          });
        }
        finalDaPro = App.testes.filter(function(d) {
          return /final/img.test(d.get('titulo')) && d.get('pro')[uPro];
        })[0];
        _id = finalDaPro.get('_id');
        return Backbone.history.navigate(`comp/teste-progresso/${_id}`, {
          trigger: true
        });
      }

      gotoFinalMedicina() {
        var _id, finalDaPro, proMap, uPro;
        if (!App.user) {
          this.gotoForm();
        }
        proMap = {
          '1': 1,
          '2': 0,
          '3': 2,
          '0': 9
        };
        uPro = proMap['2'];
        if (App.masterFinalLockMedicina()) {
          return Backbone.history.navigate("comp/home/teste-bloqueado", {
            trigger: true
          });
        }
        finalDaPro = App.testes.filter(function(d) {
          return /final/img.test(d.get('titulo')) && d.get('pro')[uPro];
        })[0];
        _id = finalDaPro.get('_id');
        return Backbone.history.navigate(`comp/teste-progresso/${_id}`, {
          trigger: true
        });
      }

      gotoFinalOdontologia() {
        var _id, finalDaPro, proMap, uPro;
        if (!App.user) {
          this.gotoForm();
        }
        proMap = {
          '1': 1,
          '2': 0,
          '3': 2,
          '0': 9
        };
        uPro = proMap['3'];
        if (App.masterFinalLockOdontologia()) {
          return Backbone.history.navigate("comp/home/teste-bloqueado", {
            trigger: true
          });
        }
        finalDaPro = App.testes.filter(function(d) {
          return /final/img.test(d.get('titulo')) && d.get('pro')[uPro];
        })[0];
        _id = finalDaPro.get('_id');
        return Backbone.history.navigate(`comp/teste-progresso/${_id}`, {
          trigger: true
        });
      }

      gotoVideo(e) {
        var ds;
        ds = $(e.target).attr("data-source");
        if (!ds) {
          ds = $(e.target.parentNode).attr("data-source");
        }
        if (ds) {
          return Backbone.history.navigate('comp/video-player/' + ds, {
            trigger: true
          });
        } else {
          return Backbone.history.navigate('comp/video-player', {
            trigger: true
          });
        }
      }

    };

    HomeLayout.prototype.className = 'enf-med-main container';

    HomeLayout.prototype.template = '#home-inicial';

    HomeLayout.prototype.ui = {
      'inscricoes': '.inscricoes'
    };

    HomeLayout.prototype.events = {
      'click .gotoUnidade': 'gotoUnidade',
      'click .gotoForm': 'gotoForm',
      'click .gotoCasos': 'gotoCasos',
      'click .gotoCalculadoras': 'gotoCalculadoras',
      'click .gotoMaterial': 'gotoMaterial',
      'click .gotoTestes': 'gotoTestes',
      'click .gotoInicialEnfermagem': 'gotoInicialEnfermagem',
      'click .gotoFinalEnfermagem': 'gotoFinalEnfermagem',
      'click .gotoInicialMedicina': 'gotoInicialMedicina',
      'click .gotoFinalMedicina': 'gotoFinalMedicina',
      'click .gotoInicialOdontologia': 'gotoInicialOdontologia',
      'click .gotoFinalOdontologia': 'gotoFinalOdontologia',
      'click .gotoFinalInterdisciplinar': 'gotoFinalInterdisciplinar',
      'click .gotoInicialInterdisciplinar': 'gotoInicialInterdisciplinar',
      'click .gotoVideo': 'gotoVideo'
    };

    return HomeLayout;

  }).call(this);
  return HomeLayout;
});
