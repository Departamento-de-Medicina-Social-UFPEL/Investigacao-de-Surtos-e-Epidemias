// Generated by CoffeeScript 1.8.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['../collections/Monitoramentos', '../models/Monitoramento', 'utils', 'uf_municipios'], function(Monitoramentos, Monitoramento, utils, uf) {
  var FormularioLocalView;
  FormularioLocalView = (function(_super) {
    __extends(FormularioLocalView, _super);

    function FormularioLocalView() {
      return FormularioLocalView.__super__.constructor.apply(this, arguments);
    }

    FormularioLocalView.prototype.initialize = function() {
      var local, user;
      user = App.user, local = App.local;
      if (!this.model) {
        return this.model = new Monitoramento();
      }
    };

    FormularioLocalView.prototype.className = 'container';

    FormularioLocalView.prototype.template = '#monitoramento-covid-formulario-local';

    FormularioLocalView.prototype.ui = {
      'btnClear': ".btn-clear",
      'btnSave': ".btn-save",
      "inputLocal": "#inputLocal",
      "inputUf": "#inputUf",
      "inputMunicipio": "#inputMunicipio",
      "ibge": "#inputIbge",
      "inputTipo": 'input:radio[name="optionRadiosTipoAmostragem"]'
    };

    FormularioLocalView.prototype.events = {
      'click .btn-clear': "limpar",
      'click .btn-save': "salvar",
      'change input': 'removeErro',
      'change [name="inputUf"]': 'obtemMunicipios',
      'change select[name="inputMunicipio"]': 'muni_ibge',
      'blur select[name="inputMunicipio"]': 'muni_ibge'
    };

    FormularioLocalView.prototype.removeErro = function(e) {
      return $(e.target).parent().removeClass('has-error');
    };

    FormularioLocalView.prototype.salvar = function() {
      var camposErros, dados, err, m, v;
      this.ui.btnSave.attr('disabled', true);
      dados = {
        "user": App.user.cpf,
        "local": this.ui.inputLocal.val(),
        "uf": this.ui.inputUf.val(),
        "municipio": this.ui.inputMunicipio.val(),
        "tipo": this.ui.inputTipo.filter(':checked').val()
      };
      err = false;
      camposErros = [];
      for (v in dados) {
        if (!dados[v]) {
          err = true;
          camposErros.push('#input' + v.slice(0, 1).toUpperCase() + v.slice(1));
        }
      }
      if (err) {
        camposErros.forEach(function(c) {
          return $(c).parent().addClass('has-error');
        });
        $(camposErros[0]).focus();
      }
      dados['ibge'] = this.ui.ibge.val();
      for (v in dados) {
        this.model.set(v, dados[v]);
      }
      if (!this.model.get('id')) {
        dados['id'] = this.model.cid;
        m = App.monitoramentos.create(dados);
      } else {
        m = App.monitoramentos.update(this.model);
      }
      this.ui.btnSave.attr('disabled', false);
      return App.appRouter.navigate('#comp/monitoramento-covid/local/' + m.id, {
        'trigger': true
      });
    };

    FormularioLocalView.prototype.montaComboEstados = function() {
      var sigla, siglas, _i, _len;
      siglas = staticData.estados.map(function(v) {
        return v.sigla;
      });
      this.$el.find('[name="inputUf"]').empty();
      this.$el.find('[name="inputUf"]').append("<option value='-1'>Selecione</option>");
      for (_i = 0, _len = siglas.length; _i < _len; _i++) {
        sigla = siglas[_i];
        this.$el.find('[name="inputUf"]').append("<option value='" + sigla + "'>" + sigla + "</option>");
      }
      if (this.user) {
        if (this.user.uf) {
          return this.$el.find('[name="inputUf"]').val(this.user.uf);
        }
      }
    };

    FormularioLocalView.prototype.obtemMunicipios = function() {
      var cit, cits, estado, k, muniSel, opt, uma, _i, _len, _ref;
      uf = this.$el.find('[name="inputUf"]').val();
      muniSel = this.$el.find('[name="inputMunicipio"]');
      muniSel.prop('disabled', 'disabled');
      cits = [];
      _ref = staticData.estados;
      for (k = _i = 0, _len = _ref.length; _i < _len; k = ++_i) {
        estado = _ref[k];
        if (estado.sigla === uf) {
          cits = estado.cidades;
        }
      }
      muniSel.empty();
      if (uf !== '-1') {
        muniSel.append($('<option value="-1">selecione...</option>'));
        for (uma in cits) {
          cit = cits[uma];
          opt = $('<option value="' + cit.nome + '" data-ibge="' + cit.ibge + '">' + cit.nome + '</option>');
          opt.appendTo(muniSel);
        }
        muniSel.removeAttr('disabled');
      } else {
        muniSel.append($('<option value="-1">&#8592; Escolha um estado</option>'));
        muniSel.attr('disabled', true);
      }
      if (this.user) {
        if (this.user.municipio) {
          return this.$el.find('[name="inputMunicipio"]').val(this.user.municipio);
        }
      }
    };

    FormularioLocalView.prototype.muni_ibge = function() {
      var ibge;
      ibge = $('[name="inputMunicipio"]').children(':checked').data('ibge');
      return $('[name="ibge"]').val(ibge);
    };

    FormularioLocalView.prototype.prettyNome = function(evt) {
      var str;
      this.hadFocus = $(evt.target);
      str = $(evt.target).val();
      str = utils.pretty.name(str);
      return $(evt.target).val(str);
    };

    FormularioLocalView.prototype.preenche = function() {
      if (!this.model.get('id')) {
        return;
      }
      this.ui.inputLocal.val(this.model.get('nome'));
      this.ui.inputUf.val(this.model.get('uf'));
      return this.ui.inputMunicipio.val(this.model.get('municipio'));
    };

    FormularioLocalView.prototype.onRender = function() {
      this.montaComboEstados();
      return this.preenche();
    };

    return FormularioLocalView;

  })(Marionette.CompositeView);
  return FormularioLocalView;
});
