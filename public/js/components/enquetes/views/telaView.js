// Generated by CoffeeScript 1.8.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['backbone.marionette'], function(Marionette) {
  var ListaEnquetesView;
  ListaEnquetesView = (function(_super) {
    __extends(ListaEnquetesView, _super);

    function ListaEnquetesView() {
      return ListaEnquetesView.__super__.constructor.apply(this, arguments);
    }

    ListaEnquetesView.prototype.initialize = function(user) {
      var enquetes, self;
      this.user = user;
      console.log('lista view');
      self = this;
      this.model = new Backbone.Model({
        elegivel: false,
        cadastro: false,
        conclusao: false,
        encerramento: false,
        encerradas: false
      });
      if (App.enquetes) {
        enquetes = App.user.enquetes[App.moduloId];
        console.log('enquetes', enquetes);
        if (enquetes) {
          if (enquetes.cadastro) {
            this.model.set('cadastro', true);
          }
          if (enquetes.conclusao) {
            this.model.set('conclusao', true);
          }
          if (enquetes.encerramento) {
            this.model.set('encerramento', true);
          }
          return modulo.ofertasAbertas.forEach(function(o) {
            var nc;
            if (!self.model.elegivel) {
              nc = o.conteudo.substring(0, 1).toUpperCase() + o.conteudo.substring(1);
              console.log(nc, 'nc');
              return self.model.elegivel = App["masterElegivelCert" + nc]();
            }
          });
        }
      }
    };

    ListaEnquetesView.prototype.template = _.template($('#enquetes-template').html());

    ListaEnquetesView.prototype.cancelEl = '.close-modal';

    ListaEnquetesView.prototype.className = 'container  enf-med-main ';

    ListaEnquetesView.prototype.onRender = function() {
      var self;
      self = this;
      return console.log(this.model, 'modelo');
    };

    return ListaEnquetesView;

  })(Marionette.ItemView);
  return ListaEnquetesView;
});
