// Generated by CoffeeScript 1.8.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['backbone', 'backbone.marionette'], function(Backbone, Marionette) {
  var CargaTabagicaMainView;
  CargaTabagicaMainView = (function(_super) {
    __extends(CargaTabagicaMainView, _super);

    function CargaTabagicaMainView() {
      return CargaTabagicaMainView.__super__.constructor.apply(this, arguments);
    }

    CargaTabagicaMainView.prototype.model = new Backbone.Model;

    CargaTabagicaMainView.prototype.className = 'item calculadoras imc';

    CargaTabagicaMainView.prototype.template = '#tabagica-calc-view';

    CargaTabagicaMainView.prototype.ui = {
      'peso': '#pesoId',
      'altura': '#alturaId',
      'ehIdoso': '.ehIdoso',
      'descricao': '.descricao',
      'resultado': '.resultado',
      'resposta': '.condutaBox',
      'faixa': '.faixa',
      'altuRes': '.altuRes',
      'min': '.idealMenor',
      'max': '.idealMaior'
    };

    CargaTabagicaMainView.prototype.events = {
      'change @ui.ehIdoso': 'changeDados',
      'blur @ui.peso, @ui.altura': 'changeDados',
      'click @ui.peso, @ui.altura': 'seleciona'
    };

    CargaTabagicaMainView.prototype.seleciona = function(evt) {
      var el;
      el = $(evt.target);
      return setTimeout((function() {
        return el.select();
      }), 20);
    };

    CargaTabagicaMainView.prototype.changeDados = function() {
      var dados, estado, faixa, resultado, tab;
      dados = this.getDados();
      console.log(dados);
      faixa = dados.ehIdoso ? 'idoso' : 'adulto';
      tab = this.tabela[faixa];
      estado = this.calculaEscore(dados, tab);
      resultado = estado.indice;
      if (resultado) {
        this.ui.descricao.text(resultado.descricao);
        this.ui.resultado.text("" + (estado.valor.replace('.', ',')));
        this.ui.altuRes.text("" + (this.ui.altura.val()) + " m  " + (this.ui.peso.val()) + " Kg");
        this.ui.faixa.text("" + (faixa.slice(0, 1).toUpperCase()) + (faixa.slice(1)));
        this.ui.min.text(estado.min.replace('.', ',') + ' Kg');
        this.ui.max.text(estado.max.replace('.', ',') + ' Kg');
        return this.ui.resposta.show();
      } else {
        return this.ui.resposta.hide();
      }
    };

    CargaTabagicaMainView.prototype.getDados = function() {
      var r;
      r = {
        peso: this.limpaNum(this.ui.peso.val() || '0', 0, 250),
        altura: this.limpaNum(this.ui.altura.val() || '0', 0, 3),
        ehIdoso: this.ui.ehIdoso.prop('checked')
      };
      if (r.peso !== '0') {
        this.ui.peso.val(r.peso.replace('.', ','));
      }
      if (r.peso !== '0') {
        this.ui.altura.val(r.altura.replace('.', ','));
      }
      return r;
    };

    CargaTabagicaMainView.prototype.limpaNum = function(n, min, max, a) {
      var sohOPrim;
      if (a == null) {
        a = 0;
      }
      sohOPrim = function() {
        a++;
        if (a === 1) {
          return '.';
        } else {
          return '';
        }
      };
      n = n.replace(/\s/img, '');
      n = n.replace(',', '.');
      n = n.replace('.', sohOPrim);
      n = parseFloat(n);
      if (_.isNaN(n)) {
        return '';
      }
      switch (true) {
        case n <= min:
          return min + '';
        case n >= max:
          if ((n * 100) > max) {
            n = n / 100;
            if (n <= max) {
              return n + '';
            } else {
              return max + '';
            }
          } else {
            return max + '';
          }
          break;
        default:
          return n + '';
      }
    };

    CargaTabagicaMainView.prototype.normalTabela = function(t) {
      var i, _i, _len;
      for (_i = 0, _len = t.length; _i < _len; _i++) {
        i = t[_i];
        if (i.normal) {
          return i.normal;
        }
      }
    };

    CargaTabagicaMainView.prototype.calculaEscore = function(d, t) {
      var alt, idealMax, idealMin, imc, indice, normal, peso, r, _i, _len;
      peso = parseFloat(d.peso);
      alt = parseFloat(d.altura);
      if (!(peso && alt)) {
        return false;
      }
      imc = (peso / Math.pow(alt, 2)).toFixed(2);
      for (_i = 0, _len = t.length; _i < _len; _i++) {
        r = t[_i];
        if (r.range(imc)) {
          indice = r;
          break;
        }
      }
      normal = this.normalTabela(t);
      idealMin = (parseFloat(normal[0] * Math.pow(alt, 2))).toFixed(2);
      idealMax = (parseFloat(normal[1] * Math.pow(alt, 2))).toFixed(2);
      return {
        valor: imc,
        indice: indice,
        min: idealMin,
        max: idealMax
      };
    };

    CargaTabagicaMainView.prototype.tabela = {
      adulto: [
        {
          range: function(imc) {
            return imc < 18.5;
          },
          descricao: 'Baixo peso'
        }, {
          normal: [18.5, 25],
          range: function(imc) {
            return (25 > imc && imc >= 18.5);
          },
          descricao: 'Peso normal'
        }, {
          range: function(imc) {
            return (30 > imc && imc >= 25);
          },
          descricao: 'Excesso de peso'
        }, {
          range: function(imc) {
            return (35 > imc && imc >= 30);
          },
          descricao: 'Obesidade de Classe 1'
        }, {
          range: function(imc) {
            return (40 > imc && imc >= 35);
          },
          descricao: 'Obesidade de Classe 2'
        }, {
          range: function(imc) {
            return 40 < imc;
          },
          descricao: 'Obesidade de Classe 3'
        }
      ],
      idoso: [
        {
          range: function(imc) {
            return imc < 22;
          },
          descricao: 'Baixo peso'
        }, {
          normal: [22, 27],
          range: function(imc) {
            return (27 > imc && imc >= 22);
          },
          descricao: 'Adequado ou eutr√≥fico'
        }, {
          range: function(imc) {
            return 27 < imc;
          },
          descricao: 'Sobrepeso'
        }
      ]
    };

    CargaTabagicaMainView.prototype.onRender = function(view) {
      this.ui.resposta.hide();
      return setTimeout((function() {
        return $.material.init();
      }), 50);
    };

    return CargaTabagicaMainView;

  })(Marionette.ItemView);
  return CargaTabagicaMainView;
});
