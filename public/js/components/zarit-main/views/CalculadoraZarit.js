// Generated by CoffeeScript 1.8.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['backbone', 'backbone.marionette'], function(Backbone, Marionette) {
  var ZaritMainView;
  ZaritMainView = (function(_super) {
    __extends(ZaritMainView, _super);

    function ZaritMainView() {
      return ZaritMainView.__super__.constructor.apply(this, arguments);
    }

    ZaritMainView.prototype.className = 'item calculadoras colesterol';

    ZaritMainView.prototype.template = '#zarit-main-view';

    ZaritMainView.prototype.ui = {
      'resp': '.resposta',
      'item': '.item',
      'next': '.gonext',
      'li': 'li',
      'comeca': '.comeca',
      'prev': '.goprev',
      'inicio': '.inicio',
      'ativo': '.item.active',
      'q1': 'input:radio[name="optionRadios1"]',
      'q2': 'input:radio[name="optionRadios2"]',
      'q3': 'input:radio[name="optionRadios3"]',
      'q4': 'input:radio[name="optionRadios4"]',
      'q5': 'input:radio[name="optionRadios5"]',
      'q6': 'input:radio[name="optionRadios6"]',
      'q7': 'input:radio[name="optionRadios7"]',
      'resul': '.resultado'
    };

    ZaritMainView.prototype.events = {
      'click @ui.next': 'next',
      'click @ui.comeca': 'next',
      'click @ui.prev': 'prev',
      'click @ui.inicio': 'inicio',
      'change @ui.q1, @ui.q2, @ui.q3, @ui.q4, @ui.q5, @ui.q6, @ui.q7': 'changeDados'
    };

    ZaritMainView.prototype.next = function() {
      var atual;
      $.material.init();
      console.log('next');
      atual = this.$el.find('.item.active').data('indice');
      this.$el.find('.item.active').hide();
      this.$el.find('.item.active').removeClass('active');
      if (atual < 8) {
        atual++;
      }
      console.log(atual, 'next', this.ui.next);
      if (atual === 8) {
        this.ui.next.attr('disabled', 'disabled');
      } else {
        this.ui.next.removeAttr('disabled');
      }
      this.ui.prev.removeAttr('disabled');
      this.$el.find('.item-' + atual).addClass('active').show();
      return this.$el.find('.p' + atual).addClass('active');
    };

    ZaritMainView.prototype.prev = function() {
      var atual;
      atual = this.$el.find('.item.active').data('indice');
      this.$el.find('.p' + atual).removeClass('active');
      this.$el.find('.item.active').hide();
      this.$el.find('.item.active').removeClass('active');
      if (atual > 0) {
        atual--;
      }
      console.log(atual, 'prev');
      if (atual === 0) {
        this.ui.prev.attr('disabled', 'disabled');
      } else {
        this.ui.prev.removeAttr('disabled');
      }
      this.ui.next.removeAttr('disabled');
      return this.$el.find('.item-' + atual).addClass('active').show();
    };

    ZaritMainView.prototype.inicio = function() {
      console.log('inicio');
      this.ui.li.removeClass('active');
      this.$el.find('.item.active').hide();
      this.$el.find('.item.active').removeClass('active');
      this.ui.prev.attr('disabled', 'disabled');
      this.ui.next.removeAttr('disabled');
      $('.item-0').addClass('active');
      return this.$el.find('.item.active').show();
    };

    ZaritMainView.prototype.changeDados = function() {
      var respostas, valor;
      respostas = this.getDados();
      console.log('dados', this.getDados());
      valor = this.calculaEscore(respostas);
      console.log(valor, 'val');
      if (14 < valor && valor <= 22) {
        return this.ui.resul.html("Moderada");
      } else if (valor > 22) {
        return this.ui.resul.html("Grave");
      } else {
        return this.ui.resul.html("Leve");
      }
    };

    ZaritMainView.prototype.getDados = function() {
      return [this.ui.q1.filter(':checked').val(), this.ui.q2.filter(':checked').val(), this.ui.q3.filter(':checked').val(), this.ui.q4.filter(':checked').val(), this.ui.q5.filter(':checked').val(), this.ui.q6.filter(':checked').val(), this.ui.q7.filter(':checked').val()];
    };

    ZaritMainView.prototype.calculaEscore = function(d) {
      var escore, item;
      escore = 0;
      console.log(d, 'd');
      for (item in d) {
        console.log(item, 'item');
        if (item !== void 0) {
          escore = escore + (parseInt(d[item]));
        }
      }
      return escore;
    };

    ZaritMainView.prototype.onRender = function(view) {
      this.ui.item.hide();
      this.$el.find('.item.active').show();
      this.ui.prev.attr('disabled', 'disabled');
      return this.changeDados();
    };

    return ZaritMainView;

  })(Marionette.ItemView);
  return ZaritMainView;
});
