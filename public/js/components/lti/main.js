// Generated by CoffeeScript 1.8.0
define(['./controller', './routes'], function(controller, routes) {
  return function(component, parentApp, Backbone, Marionette, $, _) {
    var ava, avaName, css, el, key, lti, menuEntryInstance, modulo, path, prefixedRoutes, sett, val, voltarAva, _ref;
    lti = window.lti;
    modulo = window.modulo;
    if (!(lti && lti.modulo_id === modulo._id)) {
      return false;
    }
    console.log(lti);
    parentApp.user = _.extend((parentApp.user ? parentApp.user : {}), {
      cpf: lti.ext_user_username,
      moodleId: lti.user_id,
      ficha: {
        pessoal: {
          nome: {
            primeiro: lti.lis_person_name_given,
            sobrenome: lti.lis_person_name_family,
            completo: lti.lis_person_name_full
          }
        }
      },
      isLti: true
    });
    if (lti.custom_settings) {
      sett = lti.custom_settings = JSON.parse(lti.custom_settings);
      if (sett.style) {
        _ref = sett.style;
        for (el in _ref) {
          css = _ref[el];
          $(el).css(css);
        }
      }
    }
    menuEntryInstance = {
      'style': 'link',
      'link': '#comp/lti/instance',
      'icone': 'cast-connected',
      'texto': "via " + lti.tool_consumer_instance_guid
    };
    ava = lti.tool_consumer_info_product_family_code;
    avaName = _.capitalize(ava);
    voltarAva = {
      'style': 'link',
      'link': '#comp/lti/return',
      'icone': 'exit-to-app',
      'texto': "" + lti.context_title + " (" + avaName + ")"
    };
    App.menuEntries.unshift(voltarAva);
    App.menuEntries.unshift(menuEntryInstance);
    prefixedRoutes = {};
    for (key in routes) {
      val = routes[key];
      path = "comp/" + this.moduleName + key;
      prefixedRoutes[path] = val;
    }
    return parentApp.appRouter.processAppRoutes(controller, prefixedRoutes);
  };
});
