// Generated by CoffeeScript 1.8.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['backbone', 'backbone.marionette'], function(Backbone, Marionette) {
  var calCovidMainView;
  calCovidMainView = (function(_super) {
    __extends(calCovidMainView, _super);

    function calCovidMainView() {
      return calCovidMainView.__super__.constructor.apply(this, arguments);
    }

    calCovidMainView.prototype.model = new Backbone.Model;

    calCovidMainView.prototype.className = 'item calculadoras calCovid';

    calCovidMainView.prototype.template = '#calc-covid-main';

    calCovidMainView.prototype.ui = {
      'resp': '.resultado',
      'condutaBox': '.condutaBox',
      'item': '.item',
      'li': 'li',
      'processo': '.processoTrabalho',
      'dtatualdia': '#dt-atual-dia',
      'dtatualmes': '#dt-atual-mes',
      'dtatualano': '#dt-atual-ano',
      'tem11anos': 'input[name="optionRadiosIdade"]',
      'dezanos': '.10anos',
      'qdezanos': '.q10anos',
      'onzeanos': '.11anos',
      'qtevesintomas': 'input:radio[name="optiontevesintomas10"]',
      'qperdaolfato': 'input:radio[name="optionRadiosPerdaolfato"]',
      'qperdaPaladar': 'input:radio[name="optionRadiosPerdaPaladar"]',
      'qgastrointestinais': 'input:radio[name="optionRadiosGastrointestinais"]',
      'qfaltadear': 'input:radio[name="optionRadiosFaltadear"]',
      'qpressaoTorax': 'input:radio[name="optionRadiosPressaoTorax"]',
      'qsaturacao': 'input:radio[name="optionRadiosSaturacao"]',
      'qcoloracaoazulada': 'input:radio[name="optionRadiosColoracaoAzulada"]',
      'qbatimentosazanariz': 'input:radio[name="optionRadiosBatimentosAzaNariz"]',
      'qtiragemintercostal': 'input:radio[name="optionRadioTiragemIntercostal"]',
      'dtsintomadia': '#dt-sintoma-dia',
      'dtsintomames': '#dt-sintoma-mes',
      'dtsintomaano': '#dt-sintoma-ano',
      'qcontato': 'input:radio[name="optionRadiosContato"]',
      'contato': '.contato',
      'dtcontatodia': '#dt-contato-dia',
      'dtcontatomes': '#dt-contato-mes',
      'dtcontatoano': '#dt-contato-ano',
      'qexameimagem': 'input:radio[name="optionRadiosExameImagem"]',
      'qexameimagemcompativel': 'input:radio[name="optionRadiosExameImagemCompativel"]',
      'qexamepcr': 'input:radio[name="optionRadiosExamePcr"]',
      'pcrdiadia': '#dt-exame-pcr-dia',
      'pcrdiames': '#dt-exame-pcr-mes',
      'pcrdiaano': '#dt-exame-pcr-ano',
      'qexamepcrprazo': 'input:radio[name="optionRadiosExamePcrPrazo"]',
      'qexamepcrResultado': 'input:radio[name="optionRadiosExamePcrResultado"]',
      'qexameaindapode': 'input:radio[name="optionRadiosExameAindaPode"]',
      'qtesteantigeno': 'input:radio[name="optionRadiosTesteAntigeno"]',
      'testeantigenodia': '#dt-exame-antigeno-dia',
      'testeantigenomes': '#dt-exame-antigeno-mes',
      'testeantigenoano': '#dt-exame-antigeno-ano',
      'qtesteantigenonoprazo': 'input:radio[name="optionRadiosTesteAntigenoNoPrazo"]',
      'qtesteantigenoresultado': 'input:radio[name="optionRadiosTesteAntigenoResultado"]',
      'qtesteantigenoaindapode': 'input:radio[name="optionRadiosTesteAntigenoAindaPode"]',
      'qpesquisaagenteetinologico': 'input:radio[name="optionRadiosPesquisaAgenteEtinologico"]',
      'qpesquisaagenteetinologicoresultado': 'input:radio[name="optionRadiosPesquisaAgenteEtinologicoResultado"]',
      'calcula': '#calculaEscore',
      'categoria': '.categoria',
      'dataprimeirosintoma': '.dataprimeirosintoma',
      'blocoexameimagem': '.blocoexameimagem',
      'exameimagem': '.exameimagem',
      'examepcr': '.examepcr',
      'nexamepcr': '.nexamepcr',
      'exameantigeno': '.exameantigeno',
      'nexameantigeno': '.nexameantigeno',
      'algumteste': '.fezalgumteste',
      'agenteetinologico': '.agenteetinologico',
      'isolamento': '.isolamento',
      'quarentena': '.quarentena',
      'dtisolamento': '.dt-isolamento',
      'resultado': '.resultado',
      'realizarPcr': '.realizar-pcr',
      'naoRealizarPcr': '.nao-realizar-pcr',
      'realizarAntigeno': '.realizar-antigeno',
      'naoRealizarAntigeno': '.nao-realizar-antigeno',
      'dtRealizarPcr': '.dt-realizar-pcr',
      'dtRealizarAntigeno': '.dt-realizar-antigeno',
      'processos': '.processos',
      'dtAtualMesg': '#dt-atual-msg',
      'dtPcrMesg': '#dt-pcr-msg',
      'dtContatoMesg': '#dt-contato-msg',
      'dtAntigenoMesg': '#dt-antigeno-msg',
      'dtSintomaMesg': '#dt-sintoma-msg',
      'errorMesg': '#error-msg',
      'paladarolfato': '.paladarolfato',
      'recomendacoes': '#recomendacoes-title',
      'zera': '#zeraEscore',
      'umdia': '.umdia',
      'doisdia': '.doisdia',
      'rou': '.rou',
      'questoes5a8': '.questoes5a8',
      'popover': '[data-toggle="popover"]'
    };

    calCovidMainView.prototype.events = {
      'change input': 'escondeResultado',
      'click @ui.calcula': 'calculaEscore',
      'click @ui.zera': 'zeraEscore',
      'change @ui.categoria': 'calculaCategoria',
      'change @ui.qexameimagem': 'exibeOcultaResultadoImagem',
      'change @ui.qexamepcr': 'exibeOcultaResultadoPcr',
      'change @ui.qtesteantigeno': 'exibeOcultaResultadoAntigeno',
      'change @ui.qpesquisaagenteetinologico': 'exibeOcultaEtinologicoResultado',
      'change @ui.qcontato': 'exibeOcultaDtUltimoContato',
      'change @ui.qtevesintomas, @ui.tem11anos': 'idadeousintoma',
      'change @ui.dtatualdia, @ui.dtatualmes, @ui.dtatualano, @ui.dtsintomadia, @ui.dtsintomames, @ui.dtsintomaano, @ui.pcrdiadia, @ui.pcrdiames, @ui.pcrdiaano, @ui.dtcontatodia, @ui.dtcontatomes, @ui.dtcontatoano, @ui.testeantigenodia, @ui.testeantigenomes, @ui.testeantigenoano': 'getDatas',
      'change @ui.tem11anos, @ui.qtevesintomas, @ui.qtevesintomas,@ui.qgastrointestinais, @ui.qfaltadear, @ui.qpressaoTorax, @ui.qsaturacao, @ui.qcoloracaoazulada, @ui.qbatimentosazanariz, @ui.qtiragemintercostal': 'exibeOcultaPaladarOlfato'
    };

    calCovidMainView.prototype.escondeResultado = function() {
      return this.ui.condutaBox.hide();
    };

    calCovidMainView.prototype.exibeOcultaPaladarOlfato = function() {
      var dados, simorPar45678, simorPar45678910, tem11;
      dados = this.getDados();
      simorPar45678 = dados[2] === '1' || dados[3] === '1' || dados[4] === '1' || dados[5] === '1' || dados[6] === '1';
      simorPar45678910 = simorPar45678 || dados[7] === '1' || dados[8] === '1';
      console.log(this.ui.tem11anos.filter(':checked').val() === '1', simorPar45678, simorPar45678910, 'paladarolfato', this.ui.qtevesintomas.filter(':checked').val());
      tem11 = this.ui.tem11anos.filter(':checked').val() === '1' ? true : false;
      if ((tem11 && (this.ui.qtevesintomas.filter(':checked').val() === '1' || simorPar45678)) || (!tem11 && (this.ui.qtevesintomas.filter(':checked').val() === '1' || simorPar45678910))) {
        this.ui.paladarolfato.show();
        return this.ui.blocoexameimagem.show();
      } else {
        this.ui.paladarolfato.hide();
        this.ui.blocoexameimagem.hide();
        this.ui.qexameimagem.filter('[value="0"]').prop('checked', true);
        this.ui.qperdaPaladar.filter('[value="0"]').prop('checked', true);
        return this.ui.qperdaolfato.filter('[value="0"]').prop('checked', true);
      }
    };

    calCovidMainView.prototype.exibeOcultaDtUltimoContato = function() {
      if (this.ui.qcontato.filter(':checked').val() === '1') {
        return this.ui.contato.show();
      } else {
        this.ui.contato.hide();
        return this.ui.contato.find("input").val('');
      }
    };

    calCovidMainView.prototype.idadeousintoma = function() {
      var sintomas;
      sintomas = this.ui.qtevesintomas.filter(':checked').val() === '1';
      if (this.ui.qgastrointestinais.filter(':checked').val() === '1') {
        sintomas = true;
      }
      if (sintomas) {
        this.ui.questoes5a8.show();
        if (this.ui.tem11anos.filter(':checked').val() === '0') {
          this.ui.qdezanos.show();
        } else {
          this.ui.qdezanos.hide();
        }
      } else {
        this.ui.questoes5a8.hide();
        this.ui.qdezanos.hide();
      }
      if (this.ui.tem11anos.filter(':checked').val() === '1') {
        this.ui.dezanos.hide();
        return console.log('oculta 10');
      } else {
        console.log('exibe 10');
        return this.ui.dezanos.show();
      }
    };

    calCovidMainView.prototype.getDatas = function() {
      var datas;
      datas = {
        'dt_atual': this.validaData([this.ui.dtatualdia.val(), this.ui.dtatualmes.val(), this.ui.dtatualano.val()], this.ui.dtAtualMesg),
        'dt_sintoma': this.validaData([this.ui.dtsintomadia.val(), this.ui.dtsintomames.val(), this.ui.dtsintomaano.val()], this.ui.dtSintomaMesg),
        'dt_pcr': this.validaData([this.ui.pcrdiadia.val(), this.ui.pcrdiames.val(), this.ui.pcrdiaano.val()], this.ui.dtPcrMesg),
        'dt_contato': this.validaData([this.ui.dtcontatodia.val(), this.ui.dtcontatomes.val(), this.ui.dtcontatoano.val()], this.ui.dtContatoMesg),
        'dt_antigeno': this.validaData([this.ui.testeantigenodia.val(), this.ui.testeantigenomes.val(), this.ui.testeantigenoano.val()], this.ui.dtAntigenoMesg)
      };
      if (datas.dt_sintoma) {
        if (datas.dt_pcr && (datas.dt_pcr < datas.dt_sintoma)) {
          this.ui.dtPcrMesg.show().html('A data do teste RT-PCR deve ser porterior ou igual a dos sintomas!');
          this.ui.errorMesg.show();
          return;
        }
        if (datas.dt_antigeno && (datas.dt_antigeno < datas.dt_sintoma)) {
          this.ui.dtAntigenoMesg.show().html('A data do teste Antigeno deve ser porterior ou igual a dos sintomas!');
          this.ui.errorMesg.show();
          return;
        }
        if (datas.dt_atual && (datas.dt_atual < datas.dt_sintoma)) {
          this.ui.dtAntigenoMesg.show().html('A data do 1º sintoma deve ser anterior a data atual!');
          this.ui.errorMesg.show();
          return;
        }
      } else if (datas.dt_contato) {
        if (datas.dt_pcr && (datas.dt_pcr < datas.dt_contato)) {
          this.ui.dtPcrMesg.show().html('A data do teste RT-PCR deve ser porterior ou igual a do contato!');
          this.ui.errorMesg.show();
          return;
        }
        if (datas.dt_antigeno && (datas.dt_antigeno < datas.dt_contato)) {
          this.ui.dtAntigenoMesg.show().html('A data do teste Antigeno deve ser porterior ou igual a do contato!');
          this.ui.errorMesg.show();
          return;
        }
        if (datas.dt_atual && (datas.dt_atual <= datas.dt_contato)) {
          this.ui.dtAntigenoMesg.show().html('A data do último contato deve ser anterior a data atual!');
          this.ui.errorMesg.show();
          return;
        }
      }
      return datas;
    };

    calCovidMainView.prototype.validaData = function(dt, msg) {
      var dnow, dtnow, dtx, e, maximodia, mnow;
      console.log('valida esta data', dt);
      dt[0] = parseInt(dt[0]);
      dt[1] = parseInt(dt[1]);
      if (!dt[0] && !dt[1] && !dt[2]) {
        msg.show().html('Esta data é obrigatória');
        return '';
      }
      maximodia = 31;
      if ([2, 4, 6, 9, 11].indexOf(dt[1]) > -1) {
        maximodia = 30;
      }
      console.log(maximodia, 'maximodia', [2, 4, 6, 9, 11].indexOf(dt[1]) > -1, dt[1], [2, 4, 6, 9, 11].indexOf(dt[1]));
      if (dt[0] < 1 || dt[0] > maximodia) {
        msg.show().html('Digite um dia válido!');
        return '';
      }
      if (dt[1] < 1 || dt[1] > 12) {
        msg.show().html('Digite um mês é válido!');
        return '';
      }
      if (dt[2].length < 4) {
        msg.show().html('Digite um ano válido! Ex: 2021');
        return '';
        return '';
      }
      if (dt[0] < 10) {
        dt[0] = '0' + dt[0];
      }
      if (dt[1] < 10) {
        dt[1] = '0' + dt[1];
      }
      dt[0] += '';
      dt[1] += '';
      try {
        dtx = Date.parse(dt[2] + '-' + dt[1] + '-' + dt[0] + 'T06:00:00Z');
        console.log(dtx, 'dtx', dt[2] + '-' + dt[1] + '-' + dt[0]);
        dtnow = new Date();
        console.log(dtnow, 'dtnow');
        dnow = dtnow.getDate();
        if (dnow < 10) {
          dnow = '0' + dnow;
        }
        mnow = dtnow.getMonth() + 1;
        if (mnow < 10) {
          mnow = '0' + mnow;
        }
        dtnow = Date.parse(dtnow.getFullYear() + '-' + mnow + '-' + dnow + 'T06:00:00Z');
        console.log(dtnow, 'dtnow2');
        if (dtx > dtnow) {
          throw "As datas não podem ultrapassar a data atual!";
        }
        msg.hide().html('');
        this.ui.errorMesg.hide();
      } catch (_error) {
        e = _error;
        console.log(e);
        msg.show().html(e);
        return '';
      }
      return dtx;
    };

    calCovidMainView.prototype.getDados = function() {
      var d;
      d = [this.ui.qperdaolfato.filter(':checked').val(), this.ui.qperdaPaladar.filter(':checked').val(), this.ui.qgastrointestinais.filter(':checked').val(), this.ui.qfaltadear.filter(':checked').val(), this.ui.qpressaoTorax.filter(':checked').val(), this.ui.qsaturacao.filter(':checked').val(), this.ui.qcoloracaoazulada.filter(':checked').val(), this.ui.qbatimentosazanariz.filter(':checked').val(), this.ui.qtiragemintercostal.filter(':checked').val(), this.ui.qcontato.filter(':checked').val(), this.ui.qexameimagem.filter(':checked').val(), this.ui.qexameimagemcompativel.filter(':checked').val(), this.ui.qexamepcr.filter(':checked').val(), this.ui.qexamepcrResultado.filter(':checked').val(), this.ui.qtesteantigeno.filter(':checked').val(), this.ui.qtesteantigenoresultado.filter(':checked').val(), this.ui.qpesquisaagenteetinologico.filter(':checked').val(), this.ui.qpesquisaagenteetinologicoresultado.filter(':checked').val()];
      console.log('dados', d);
      return d;
    };

    calCovidMainView.prototype.zeraEscore = function() {
      this.ui.qperdaolfato.filter('[value="0"]').prop('checked', true).change();
      this.ui.qperdaPaladar.filter('[value="0"]').prop('checked', true).change();
      this.ui.qgastrointestinais.filter('[value="0"]').prop('checked', true).change();
      this.ui.qfaltadear.filter('[value="0"]').prop('checked', true).change();
      this.ui.qpressaoTorax.filter('[value="0"]').prop('checked', true).change();
      this.ui.qsaturacao.filter('[value="0"]').prop('checked', true).change();
      this.ui.qcoloracaoazulada.filter('[value="0"]').prop('checked', true).change();
      this.ui.qbatimentosazanariz.filter('[value="0"]').prop('checked', true).change();
      this.ui.qtiragemintercostal.filter('[value="0"]').prop('checked', true).change();
      this.ui.qcontato.filter('[value="0"]').prop('checked', true).change();
      this.ui.qexameimagem.filter('[value="0"]').prop('checked', true).change();
      this.ui.qexameimagemcompativel.filter('[value="0"]').prop('checked', true).change();
      this.ui.qexamepcr.filter('[value="0"]').prop('checked', true).change();
      this.ui.qexamepcrResultado.filter('[value="0"]').prop('checked', true).change();
      this.ui.qtesteantigeno.filter('[value="0"]').prop('checked', true).change();
      this.ui.qtesteantigenoresultado.filter('[value="0"]').prop('checked', true).change();
      this.ui.qpesquisaagenteetinologico.filter('[value="0"]').prop('checked', true).change();
      this.ui.qpesquisaagenteetinologicoresultado.filter('[value="0"]').prop('checked', true).change();
      this.ui.qtevesintomas.filter('[value="0"]').prop('checked', true).change();
      this.ui.qtevesintomas.filter('[value="0"]').prop('checked', true).change();
      this.ui.dtsintomadia.val('');
      this.ui.dtsintomames.val('');
      this.ui.dtsintomaano.val('');
      this.ui.pcrdiadia.val('');
      this.ui.pcrdiames.val('');
      this.ui.pcrdiaano.val('');
      this.ui.dtcontatodia.val('');
      this.ui.dtcontatomes.val('');
      this.ui.dtcontatoano.val('');
      this.ui.testeantigenodia.val('');
      this.ui.testeantigenomes.val('');
      this.ui.testeantigenoano.val('');
      this.ui.naoRealizarPcr.hide();
      this.ui.naoRealizarAntigeno.hide();
      this.ui.condutaBox.hide();
      this.ui.processos.html('');
      return this.ui.errorMesg.hide();
    };

    calCovidMainView.prototype.exibeOcultaResultadoImagem = function() {
      if (this.ui.qexameimagem.filter(':checked').val() === '1') {
        return this.ui.exameimagem.show();
      } else {
        this.ui.exameimagem.hide();
        return this.ui.exameimagem.find('input:radio').filter('[value="0"]').prop('checked', true);
      }
    };

    calCovidMainView.prototype.exibeOcultaResultadoPcr = function() {
      if (this.ui.qexamepcr.filter(':checked').val() === '1') {
        this.ui.examepcr.show();
        this.ui.nexamepcr.hide();
        this.ui.nexamepcr.find('input:radio').filter('[value="0"]').prop('checked', true);
      } else {
        this.ui.examepcr.hide();
        this.ui.examepcr.find('input:radio').filter('[value="0"]').prop('checked', true);
        this.ui.nexamepcr.show();
        this.ui.pcrdiadia.val('');
        this.ui.pcrdiames.val('');
        this.ui.pcrdiaano.val('');
      }
      return this.exibeOcultaEtinologico();
    };

    calCovidMainView.prototype.exibeOcultaResultadoAntigeno = function() {
      if (this.ui.qtesteantigeno.filter(':checked').val() === '1') {
        this.ui.exameantigeno.show();
        this.ui.nexameantigeno.hide();
        this.ui.nexameantigeno.find('input:radio').filter('[value="0"]').prop('checked', true);
      } else {
        this.ui.exameantigeno.hide();
        this.ui.exameantigeno.find('input:radio').filter('[value="0"]').prop('checked', true);
        this.ui.nexameantigeno.show();
        this.ui.testeantigenodia.val('');
        this.ui.testeantigenomes.val('');
        this.ui.testeantigenoano.val('');
      }
      return this.exibeOcultaEtinologico();
    };

    calCovidMainView.prototype.exibeOcultaEtinologico = function() {
      if (this.ui.qtesteantigeno.filter(':checked').val() === '1' || this.ui.qexamepcr.filter(':checked').val() === '1') {
        return this.ui.algumteste.show();
      } else {
        this.ui.algumteste.hide();
        return this.ui.algumteste.find('input:radio').filter('[value="0"]').prop('checked', true);
      }
    };

    calCovidMainView.prototype.exibeOcultaEtinologicoResultado = function() {
      if (this.ui.qpesquisaagenteetinologico.filter(':checked').val() === '1') {
        return this.ui.agenteetinologico.show();
      } else {
        return this.ui.agenteetinologico.hide();
      }
    };

    calCovidMainView.prototype.calculaCategoria = function(dados) {
      var categoria, naoPara234, naoPara5678, naoPara5678910, simOuPar5678, simOuPar5678910, simOuPara23, teveAlgumSintoma;
      dados = this.getDados();
      categoria = 0;
      naoPara234 = dados[0] === '0' && dados[1] === '0' && dados[2] === '0';
      naoPara5678 = dados[3] === '0' && dados[4] === '0' && dados[5] === '0' && dados[6] === '0';
      naoPara5678910 = naoPara5678 && dados[7] === '0' && dados[8] === '0';
      simOuPar5678 = dados[3] === '1' || dados[4] === '1' || dados[5] === '1' || dados[6] === '1';
      simOuPar5678910 = simOuPar5678 || dados[7] === '1' || dados[8] === '1';
      simOuPara23 = dados[0] === '1' || dados[1] === '1';
      if (this.ui.tem11anos.filter(':checked').val() === '1') {
        teveAlgumSintoma = this.ui.qtevesintomas.filter(':checked').val() === '1';
        if ((teveAlgumSintoma || dados[2] === '1') && naoPara5678) {
          categoria = 1;
        }
        if (simOuPar5678 && teveAlgumSintoma) {
          categoria = 2;
        }
        if (naoPara5678 && naoPara234 && !teveAlgumSintoma) {
          categoria = 3;
        }
      } else {
        teveAlgumSintoma = this.ui.qtevesintomas.filter(':checked').val() === '1';
        if ((teveAlgumSintoma || dados[2] === '1') && naoPara5678910) {
          categoria = 1;
        }
        if (simOuPar5678910 && teveAlgumSintoma) {
          categoria = 2;
        }
        if (naoPara5678910 && naoPara234 && !teveAlgumSintoma) {
          categoria = 3;
        }
      }
      console.log(naoPara5678910, naoPara234, !teveAlgumSintoma, 'categoriza', categoria);
      if (simOuPar5678 || categoria === 1 || categoria === 2) {
        this.ui.dataprimeirosintoma.show();
      } else {
        this.ui.dataprimeirosintoma.hide();
        this.ui.dtsintomadia.val('');
        this.ui.dtsintomames.val('');
        this.ui.dtsintomaano.val('');
      }
      return categoria;
    };

    calCovidMainView.prototype.calculaData = function(dtx, nr_dias) {
      var ano, d, dia, diasmile, mes;
      diasmile = nr_dias * (1000 * 60 * 60 * 24);
      d = new Date(dtx + diasmile);
      console.log('calculaDta', d, nr_dias, 'teste', dtx, diasmile, dtx + diasmile);
      dia = d.getDate();
      if (dia < 10) {
        dia = '0' + dia;
      }
      mes = d.getMonth() + 1;
      if (mes < 10) {
        mes = '0' + mes;
      }
      ano = d.getFullYear();
      return dia + '/' + mes + '/' + ano;
    };

    calCovidMainView.prototype.calculaDiasPassado = function(dataAntes, dataAtual) {
      var diasx, dt_atualx, dt_sintomax;
      dt_atualx = new Date(dataAtual);
      dt_sintomax = new Date(dataAntes);
      diasx = (dt_atualx.getTime() - dt_sintomax.getTime()) / 1000 / 60 / 60 / 24;
      return diasx;
    };

    calCovidMainView.prototype.exibeResultado = function(nivel, datas) {
      var antigenoPositivo, classeResultado, conduta, dt, dtAntigeno, dtFin, dtInit, dtPcr, lista, pcrPositivo;
      this.ui.errorMesg.hide();
      if (this.ui.dtsintomadia.is(':visible') && !datas.dt_sintoma) {
        this.ui.errorMesg.show();
        window.location.href = '#dt-sintoma-dia';
        return;
      }
      if (this.ui.dtcontatodia.is(':visible') && !datas.dt_contato) {
        this.ui.errorMesg.show();
        window.location.href = '#dt-contato-dia';
        return;
      }
      if (this.ui.pcrdiadia.is(':visible') && !datas.dt_pcr) {
        this.ui.errorMesg.show();
        window.location.href = '#dt-exame-pcr-dia';
        return;
      }
      if (this.ui.testeantigenodia.is(':visible') && !datas.dt_antigeno) {
        this.ui.errorMesg.show();
        window.location.href = '#dt-exame-antigeno-dia';
        return;
      }
      conduta = _.find(this.tabela, function(item) {
        return item.nivel === nivel;
      });
      console.log('exibe resultado', nivel, conduta);
      if (conduta.isolamento && ((!datas.dt_sintoma && nivel < 10) || ((this.ui.qexamepcrResultado.filter(':checked').val() === '1' && !datas.dt_pcr) || (this.ui.qtesteantigenoresultado.filter(':checked').val() === '1' && !datas.dt_antigeno)))) {
        return;
      }
      window.location.href = '#calculaEscore';
      this.ui.condutaBox.show();
      this.ui.processos.html('');
      console.log(conduta, 'conduta', datas.dt_sintoma);
      this.ui.resultado.html(conduta.descricao);
      this.ui.quarentena.hide();
      if (conduta.isolamento) {
        this.ui.isolamento.show();
        antigenoPositivo = this.ui.qtesteantigenoresultado.filter(':checked').val() === '1';
        pcrPositivo = this.ui.qexamepcrResultado.filter(':checked').val() === '1';
        console.log('antigeno', antigenoPositivo, 'pcr', pcrPositivo);
        if (nivel === 1 || (nivel > 9 && nivel < 20) || nivel === 112 || nivel === 111 || nivel === 131) {
          if (antigenoPositivo || pcrPositivo) {
            if (antigenoPositivo) {
              dt = this.calculaData(datas.dt_antigeno, conduta.nr_dias);
            }
            if (pcrPositivo) {
              dt = this.calculaData(datas.dt_pcr, conduta.nr_dias);
            }
          } else if (this.ui.qexameimagemcompativel.filter(':checked').val() === '1') {
            dt = this.calculaData(datas.dt_sintoma, conduta.nr_dias);
          } else if (nivel === 1) {
            dt = this.calculaData(datas.dt_sintoma, conduta.nr_dias);
          } else {
            dt = this.calculaData(datas.dt_contato, conduta.nr_dias);
          }
        } else if (nivel === 2 && (antigenoPositivo || pcrPositivo)) {
          if (antigenoPositivo) {
            dt = this.calculaData(datas.dt_antigeno, conduta.nr_dias);
          }
          if (pcrPositivo) {
            dt = this.calculaData(datas.dt_pcr, conduta.nr_dias);
          }
        } else {
          dt = this.calculaData(datas.dt_sintoma, conduta.nr_dias);
        }
        this.ui.dtisolamento.html(dt);
        console.log(datas, 'setou isolamento', dt);
        this.ui.doisdia.hide();
        this.ui.umdia.show();
        if (conduta.nr_dias_pcr) {
          this.ui.realizarPcr.show();
          if (nivel === 11 || nivel === 131) {
            dtInit = this.calculaData(datas.dt_contato, conduta.nr_dias_pcr);
            dtFin = this.calculaData(datas.dt_contato, conduta.nr_dias_antigeno);
            dtPcr = dtInit + ' ou ' + dtFin;
            this.ui.doisdia.show();
            this.ui.umdia.hide();
          } else {
            dtPcr = this.calculaData(datas.dt_sintoma, conduta.nr_dias_pcr);
          }
          this.ui.dtRealizarPcr.html(dtPcr);
          console.log(datas, 'setou pcr', dtPcr);
        } else {
          this.ui.realizarPcr.hide();
        }
        if (conduta.nr_dias_antigeno) {
          this.ui.realizarAntigeno.show();
          if (conduta.nr_dias_pcr) {
            this.ui.rou.show();
          } else {
            this.ui.rou.hide();
          }
          if (nivel === 11 || nivel === 131) {
            dtFin = this.calculaData(datas.dt_contato, conduta.nr_dias_antigeno);
            dtInit = this.calculaData(datas.dt_contato, conduta.nr_dias_pcr);
            dtAntigeno = dtInit + ' ou ' + dtFin;
            this.ui.doisdia.show();
            this.ui.umdia.hide();
          } else if (nivel === 111) {
            dtAntigeno = this.calculaData(datas.dt_contato, conduta.nr_dias_antigeno);
          } else {
            dtAntigeno = this.calculaData(datas.dt_sintoma, conduta.nr_dias_antigeno);
          }
          this.ui.dtRealizarAntigeno.html(dtAntigeno);
        } else {
          this.ui.realizarAntigeno.hide();
        }
        if (nivel === 12) {
          this.ui.isolamento.hide();
          this.ui.quarentena.show();
        }
      } else {
        this.ui.isolamento.hide();
      }
      if (nivel === 62 || nivel === 52 || nivel === 11 || nivel === 31 || nivel === 32 || nivel === 41 || nivel === 42 || nivel === 43 || nivel === 33 || nivel === 111) {
        if (nivel === 32 || nivel === 31 || nivel === 42 || nivel === 41 || nivel === 11 || nivel === 52 || nivel === 62) {
          if (nivel === 111) {
            this.ui.realizarPcr.hide();
            this.ui.naoRealizarPcr.show();
          } else {
            this.ui.realizarPcr.show();
            this.ui.naoRealizarPcr.hide();
          }
          if (nivel === 31 || nivel === 41 || nivel === 11 || nivel === 52 || nivel === 62) {
            if (nivel === 52 || nivel === 62) {
              this.ui.realizarAntigeno.hide();
            } else {
              this.ui.realizarAntigeno.show();
            }
            this.ui.naoRealizarAntigeno.hide();
          } else {
            this.ui.naoRealizarAntigeno.show();
          }
        } else {
          this.ui.realizarPcr.hide();
          this.ui.realizarAntigeno.hide();
          this.ui.naoRealizarPcr.show();
          this.ui.naoRealizarAntigeno.show();
        }
      } else if (nivel === 131) {
        this.ui.realizarPcr.show();
        this.ui.realizarAntigeno.show();
        this.ui.naoRealizarPcr.hide();
        this.ui.naoRealizarAntigeno.hide();
      } else {
        this.ui.realizarPcr.hide();
        this.ui.realizarAntigeno.hide();
      }
      lista = conduta.processos.map(function(p) {
        return "<li class=''>" + p + "</li>";
      });
      this.ui.processos.empty();
      if (lista.length > 0) {
        this.ui.recomendacoes.show();
        this.ui.processos.append(lista.join(''));
      } else {
        this.ui.recomendacoes.hide();
      }
      classeResultado = '';
      this.ui.resultado.removeClass('alert-success');
      this.ui.resultado.removeClass('alert-warning');
      this.ui.resultado.removeClass('alert-info');
      this.ui.resultado.removeClass('alert-danger');
      if ([0, 91, 92, 14, 15].indexOf(nivel) > -1) {
        classeResultado = 'alert-success';
      }
      if ([13, 131, 11, 111, 12, 31, 32, 33, 41, 42, 43, 5, 51, 52, 53, 6, 61, 62, 63, 7, 8].indexOf(nivel) > -1) {
        classeResultado = 'alert-info';
      }
      if ([1, 2, 10].indexOf(nivel) > -1) {
        classeResultado = 'alert-danger';
      }
      return this.ui.resultado.show().addClass(classeResultado);
    };

    calCovidMainView.prototype.calculaEscore = function() {
      var categoria, dados, datas, dias, diasAntigeno, diasAntigenoContato, diasContato, diasPcr, diasPcrContato, exameAntigenoNoPrazo, examePcrNoPrazo, saudavel;
      $('.alert').hide();
      datas = this.getDatas();
      if (!datas) {
        this.ui.errorMesg.show();
        return;
      }
      this.ui.errorMesg.hide();
      dados = this.getDados();
      console.log('calcula escore', datas, dados);
      if (!datas.dt_atual) {
        return;
      }
      if (dados[12] === '1' && !datas.dt_pcr) {
        return;
      }
      if (dados[14] === '1' && !datas.dt_antigeno) {
        return;
      }
      if (dados[9] === '1' && !datas.dt_contato) {
        return;
      }
      categoria = this.calculaCategoria(dados, datas);
      console.log('datas', datas, dados[9]);
      console.log(categoria);
      if (categoria === 1) {
        console.log('s/g suspeiro', [dados[0] === '1', dados[1] === '1', dados[9] === '1', dados[11] === '1', dados[15] === '1']);
        if (dados[0] === '1' || dados[1] === '1' || dados[9] === '1' || dados[11] === '1' || dados[13] === '1' || dados[15] === '1') {
          return this.exibeResultado(1, datas);
        }
        dias = this.calculaDiasPassado(datas.dt_sintoma, datas.dt_atual);
        if (dados[9] === '0') {
          diasPcr = this.calculaDiasPassado(datas.dt_sintoma, datas.dt_pcr);
          diasAntigeno = this.calculaDiasPassado(datas.dt_sintoma, datas.dt_antigeno);
          console.log(dados[11] === '0', dados[13] === '0', dados[15] === '0', dias <= 8, dias);
          if (dados[11] === '0') {
            if (dados[12] === '0' && dados[14] === '0') {
              if (dias < 8) {
                return this.exibeResultado(31, datas);
              }
              if (dias === 8) {
                return this.exibeResultado(32, datas);
              }
              if (dias >= 9) {
                return this.exibeResultado(33, datas);
              }
            }
            if (dados[12] === '1' && dados[13] === '0' && diasPcr <= 8 && dados[17] === '0') {
              if (dados[14] === '1' && dados[15] === '0' && diasAntigeno <= 7) {
                return this.exibeResultado(5, datas);
              }
              if (dados[14] === '0') {
                return this.exibeResultado(51, datas);
              }
            }
            console.log(dados[12], dados[14], diasAntigeno, dados[15], '52');
            if (dados[12] === '0' && dados[14] === '1' && diasAntigeno <= 7 && dados[15] === '0') {
              return this.exibeResultado(52, datas);
            }
            if ((dados[13] === '0' && dados[15] === '0') && dados[17] === '0') {
              if ((dados[12] === '1' && diasPcr > 8) || (dados[14] === '1' && diasAntigeno <= 7)) {
                return this.exibeResultado(52, datas);
              }
              if ((dados[12] === '1' && diasPcr <= 8) || (dados[14] === '1' && diasAntigeno > 7)) {
                return this.exibeResultado(51, datas);
              }
              if ((dados[12] === '1' && diasPcr > 8) || (dados[14] === '1' && diasAntigeno > 7)) {
                return this.exibeResultado(7, datas);
              }
            }
            if (((dados[12] === '1') || (dados[14] === '1')) && dados[16] === '1' && dados[17] === '1') {
              return this.exibeResultado(91, datas);
            }
          }
        }
      }
      if (categoria === 2) {
        if (dados[0] === '1' || dados[1] === '1' || dados[9] === '1' || dados[11] === '1' || dados[13] === '1' || dados[15] === '1') {
          return this.exibeResultado(2, datas);
        }
        if (dados[9] === '0' && dados[11] === '0') {
          dias = this.calculaDiasPassado(datas.dt_sintoma, datas.dt_atual);
          if (dados[12] === '0' && dados[14] === '0') {
            console.log('dias logica 4', dias);
            if (dias < 8) {
              return this.exibeResultado(41, datas);
            }
            if (dias >= 8 && dias <= 14) {
              return this.exibeResultado(42, datas);
            }
            if (dias > 14) {
              return this.exibeResultado(43, datas);
            }
          }
          console.log('passei no 6');
          if (dados[17] === '0') {
            diasPcr = this.calculaDiasPassado(datas.dt_sintoma, datas.dt_pcr);
            diasAntigeno = this.calculaDiasPassado(datas.dt_sintoma, datas.dt_antigeno);
            if (((dados[12] === '1' && diasPcr <= 14) && (dados[14] === '1' && diasAntigeno <= 7)) && (dados[13] === '0' && dados[15] === '0')) {
              return this.exibeResultado(6, datas);
            }
            if ((dados[12] === '1' && diasPcr <= 14 && dados[13] === '0') && dados[14] === '0') {
              return this.exibeResultado(61, datas);
            }
            if ((dados[12] === '0') && (dados[14] === '1' && dados[15] === '0' && diasAntigeno <= 7)) {
              return this.exibeResultado(62, datas);
            }
            console.log('teste 8', dados[12] === '1' && diasPcr > 8, dados[14] === '1' && diasAntigeno > 7, dados[13] === '0' && dados[15] === '0', dados[17] === '0');
            if (dados[13] === '0' && dados[15] === '0') {
              if ((dados[12] === '1' && diasPcr <= 14) || (dados[14] === '1' && diasAntigeno > 7)) {
                return this.exibeResultado(61, datas);
              }
              if ((dados[12] === '1' && diasPcr > 14) || (dados[14] === '1' && diasAntigeno <= 7)) {
                return this.exibeResultado(62, datas);
              }
              if ((dados[12] === '1' && diasPcr > 14) || (dados[14] === '1' && diasAntigeno > 7)) {
                return this.exibeResultado(8, datas);
              }
            }
          }
          if (((dados[12] === '1') || (dados[14] === '1')) && dados[16] === '1' && dados[17] === '1') {
            return this.exibeResultado(92, datas);
          }
        }
      }
      if (categoria === 3) {
        console.log(dados[13], dados[15], 'teste 10');
        if (dados[13] === '1' || dados[15] === '1') {
          return this.exibeResultado(10, datas);
        }
        if (dados[9] === '1') {
          diasContato = this.calculaDiasPassado(datas.dt_contato, datas.dt_atual);
          console.log(dados[12] === '0', dados[14] === '0' && diasContato <= 5, diasContato, 'quase 11');
          if (!diasContato) {
            return;
          }
          if (dados[12] === '0' && (dados[14] === '0' && (diasContato <= 6))) {
            return this.exibeResultado(11, datas);
          }
          if (dados[12] === '0' && (dados[14] === '0' && (diasContato > 6))) {
            return this.exibeResultado(111, datas);
          }
          diasPcrContato = this.calculaDiasPassado(datas.dt_contato, datas.dt_pcr);
          diasAntigenoContato = this.calculaDiasPassado(datas.dt_contato, datas.dt_antigeno);
          examePcrNoPrazo = [5, 6].indexOf(diasPcrContato) > -1;
          exameAntigenoNoPrazo = [5, 6].indexOf(diasAntigenoContato) > -1;
          if ((dados[13] === '0' && dados[15] === '0') && dados[17] === '0') {
            if ((dados[12] === '1' && examePcrNoPrazo) || (dados[14] === '1' && exameAntigenoNoPrazo)) {
              return this.exibeResultado(12, datas);
            }
            if ((dados[12] === '1' && examePcrNoPrazo) || (dados[14] === '1' && !exameAntigenoNoPrazo)) {
              this.exibeResultado(12, datas);
            }
            if ((dados[12] === '1' && !examePcrNoPrazo) || (dados[14] === '1' && exameAntigenoNoPrazo)) {
              this.exibeResultado(12, datas);
            }
            if ((dados[12] === '1' && !examePcrNoPrazo) || (dados[14] === '1' && !exameAntigenoNoPrazo)) {
              console.log(diasPcrContato, diasAntigenoContato, 'dias contato');
              if ((diasPcrContato > 6 && dados[12] === '1') || (diasAntigenoContato > 6 && dados[14] === '1')) {
                return this.exibeResultado(13, datas);
              } else if ((diasPcrContato < 5 && dados[12] === '1') || (diasAntigenoContato < 5 && dados[14] === '1')) {
                return this.exibeResultado(131, datas);
              }
            }
          }
        } else {
          if (dados[9] === '0') {
            if (dados[12] === '1' && dados[13] === '0') {
              return this.exibeResultado(14, datas);
            }
            if (dados[12] === '0' && dados[13] === '0' && dados[14] === '0' && dados[15] === '0') {
              return this.exibeResultado(15, datas);
            }
          }
          saudavel = dados.filter(function(i) {
            return i === '1';
          });
          if (saudavel.length === 0) {
            return this.exibeResultado(0, datas);
          }
        }
      }
      return this.exibeResultado(0, datas);
    };

    calCovidMainView.prototype.tabela = [
      {
        nivel: 0,
        descricao: "Não é caso suspeito ou confirmado de Covid-19",
        isolamento: false,
        processos: []
      }, {
        nivel: 1,
        descricao: "Caso confirmado",
        isolamento: true,
        nr_dias: 10,
        processos: ["Suspensão do isolamento é condicionada a estar há 24 horas sem febre sem uso de antitérmicos e ter remissão dos sintomas respiratórios.", "Indivíduos gravemente imunossuprimidos: Realizar isolamento por 20 dias a partir da data do início dos sintomas. A critério médico, pode ser requerido, nesta população, a apresentação de  RT-PCR não detectável para a descontinuidade do isolamento.", "Monitorar Caso Confirmado preferencialmente a partir das primeiras 48 horas após a notificação do caso, no mínimo a cada 2 dias, por 14 dias e obrigatoriamente no 14º dia. ", "Identificar, Rastrear, Monitorar e Isolar contatos próximos."]
      }, {
        nivel: 2,
        descricao: "SRAG Caso Confirmado",
        isolamento: true,
        nr_dias: 20,
        processos: ["Suspensão do isolamento é condicionada a estar há 24 horas sem febre sem uso de antitérmicos e ter remissão dos sintomas respiratórios.", "Indivíduos gravemente imunossuprimidos: Realizar isolamento por 20 dias a partir da data do início dos sintomas. A critério médico, pode ser requerido, nesta população, a apresentação de  RT-PCR não detectável para a descontinuidade do isolamento.", "Identificar, Rastrear, Monitorar e Isolar contatos próximos."]
      }, {
        nivel: 31,
        descricao: "SG Não Especificada, sem teste",
        isolamento: true,
        nr_dias: 10,
        nr_dias_pcr: 8,
        nr_dias_antigeno: 7,
        processos: ["Suspensão do isolamento é condicionada a estar há 24 horas sem febre sem uso de antitérmicos e ter remissão dos sintomas respiratórios.", "Indivíduos gravemente imunossuprimidos: Realizar isolamento por 20 dias a partir da data do início dos sintomas. A critério médico, pode ser requerido, nesta população, a apresentação de  RT-PCR não detectável para a descontinuidade do isolamento.", "Monitorar Caso Suspeito preferencialmente a partir das primeiras 48 horas após a notificação do caso, no mínimo a cada 2 dias, por 14 dias e obrigatoriamente no 14º dia. ", "Identificar, Rastrear, Monitorar e Isolar contatos próximos."]
      }, {
        nivel: 32,
        descricao: "SG Não Especificada, sem teste",
        isolamento: true,
        nr_dias: 10,
        nr_dias_pcr: 8,
        processos: ["A realização do teste de antígeno fora do prazo preconizado (a partir do 8º dia do início dos sintomas) aumenta a probabilidade de resultados falso negativos. ", "Suspensão do isolamento é condicionada a estar há 24 horas sem febre sem uso de antitérmicos e ter remissão dos sintomas respiratórios.", "Indivíduos gravemente imunossuprimidos: Realizar isolamento por 20 dias a partir da data do início dos sintomas. A critério médico, pode ser requerido, nesta população, a apresentação de  RT-PCR não detectável para a descontinuidade do isolamento.", "Monitorar Caso Suspeito preferencialmente a partir das primeiras 48 horas após a notificação do caso, no mínimo a cada 2 dias, por 14 dias e obrigatoriamente no 14º dia. ", "Identificar, Rastrear, Monitorar e Isolar contatos próximos."]
      }, {
        nivel: 33,
        descricao: "SG Não Especificada, sem teste",
        isolamento: true,
        nr_dias: 10,
        processos: ["A realização do teste RT-PCR fora do prazo preconizado (a partir do 9º dia do início dos sintomas) aumenta a probabilidade de resultados falso negativos.", "A realização do teste de antígeno fora do prazo preconizado (a partir do 8º dia do início dos sintomas) aumenta a probabilidade de resultados falso negativos.", "Suspensão do isolamento é condicionada a estar há 24 horas sem febre sem uso de antitérmicos e ter remissão dos sintomas respiratórios.", "Indivíduos gravemente imunossuprimidos: Realizar isolamento por 20 dias a partir da data do início dos sintomas. A critério médico, pode ser requerido, nesta população, a apresentação de  RT-PCR não detectável para a descontinuidade do isolamento.", "Monitorar Caso Suspeito preferencialmente a partir das primeiras 48 horas após a notificação do caso, no mínimo a cada 2 dias, por 14 dias e obrigatoriamente no 14º dia. ", "Identificar, Rastrear, Monitorar e Isolar contatos próximos."]
      }, {
        nivel: 41,
        descricao: "SRAG não Especificada, sem teste",
        isolamento: true,
        nr_dias: 20,
        nr_dias_pcr: 14,
        nr_dias_antigeno: 7,
        processos: ["Suspensão do isolamento é condicionada a estar há 24 horas sem febre sem uso de antitérmicos e ter remissão dos sintomas respiratórios.", "Indivíduos gravemente imunossuprimidos: Realizar isolamento por 20 dias a partir da data do início dos sintomas. A critério médico, pode ser requerido, nesta população, a apresentação de  RT-PCR não detectável para a descontinuidade do isolamento.", "Identificar, Rastrear, Monitorar e Isolar contatos próximos."]
      }, {
        nivel: 42,
        descricao: "SRAG não Especificada, sem teste",
        isolamento: true,
        nr_dias: 20,
        nr_dias_pcr: 14,
        processos: ["A realização do teste de antígeno fora do prazo preconizado (a partir do 9º dia do início dos sintomas) aumenta a probabilidade de resultados falso negativos. ", "Suspensão do isolamento é condicionada a estar há 24 horas sem febre sem uso de antitérmicos e ter remissão dos sintomas respiratórios.", "Indivíduos gravemente imunossuprimidos: Realizar isolamento por 20 dias a partir da data do início dos sintomas. A critério médico, pode ser requerido, nesta população, a apresentação de  RT-PCR não detectável para a descontinuidade do isolamento.", "Identificar, Rastrear, Monitorar e Isolar contatos próximos."]
      }, {
        nivel: 43,
        descricao: "SRAG não Especificada, sem teste",
        isolamento: true,
        nr_dias: 20,
        nr_dias_pcr: 14,
        nr_dias_antigeno: 7,
        processos: [" A realização do teste RT-PCR fora do prazo preconizado (a partir do 15º dia do início dos sintomas) aumenta a probabilidade de resultados falso negativos.", "A realização do teste de antígeno fora do prazo preconizado (a partir do 8º dia do início dos sintomas) aumenta a probabilidade de resultados falso negativos. ", "Suspensão do isolamento é condicionada a estar há 24 horas sem febre sem uso de antitérmicos e ter remissão dos sintomas respiratórios.", "Indivíduos gravemente imunossuprimidos: Realizar isolamento por 20 dias a partir da data do início dos sintomas. A critério médico, pode ser requerido, nesta população, a apresentação de  RT-PCR não detectável para a descontinuidade do isolamento.", "Identificar, Rastrear, Monitorar e Isolar contatos próximos."]
      }, {
        nivel: 5,
        descricao: "SG não especificada, testes não reagente/não detectável no prazo",
        isolamento: false,
        processos: ["Suspensão do isolamento é condicionada a estar há 24 horas sem febre sem uso de antitérmicos e ter remissão dos sintomas respiratórios.", "Monitorar Caso Suspeito preferencialmente a partir das primeiras 48 horas após a notificação do caso, no mínimo a cada 2 dias, por 14 dias e obrigatoriamente no 14º dia."]
      }, {
        nivel: 51,
        descricao: "SG não especificada, testes não reagente/não detectável no prazo",
        isolamento: false,
        processos: ["Suspensão do isolamento é condicionada a estar há 24 horas sem febre sem uso de antitérmicos e ter remissão dos sintomas respiratórios.", "Monitorar Caso Suspeito preferencialmente a partir das primeiras 48 horas após a notificação do caso, no mínimo a cada 2 dias, por 14 dias e obrigatoriamente no 14º dia."]
      }, {
        nivel: 52,
        nr_dias: 10,
        nr_dias_pcr: 8,
        descricao: "SG não especificada, testes não reagente/não detectável no prazo",
        isolamento: true,
        processos: ["O teste de antígeno é menos sensível que o RT-PCR, assim se for necessário suspender o isolamento é recomendado confirmar o resultado através do teste RT-PCR / RT-Lamp.", "Suspensão do isolamento é condicionada a estar há 24 horas sem febre sem uso de antitérmicos e ter remissão dos sintomas respiratórios.", "Indivíduos gravemente imunossuprimidos: Realizar isolamento por 20 dias a partir da data do início dos sintomas. A critério médico, pode ser requerido, nesta população, a apresentação de  RT-PCR não detectável para a descontinuidade do isolamento.", "Monitorar Caso Suspeito preferencialmente a partir das primeiras 48 horas após a notificação do caso, no mínimo a cada 2 dias, por 14 dias e obrigatoriamente no 14º dia.", "Identificar, Rastrear, Monitorar e Isolar contatos próximos."]
      }, {
        nivel: 6,
        descricao: "SRAG não especificada, testes não reagente/não detectável no prazo",
        isolamento: false,
        processos: ["Caso um primeiro teste de RT-PCR tenha resultado negativo, um segundo teste RT-PCR, preferencialmente com material de via aérea baixa, deve ser realizado 48 horas após o primeiro. Sendo os dois negativos, o paciente poderá ser retirado da precaução para Covid-19. ", "Suspensão do isolamento é condicionada a estar há 24 horas sem febre sem uso de antitérmicos e ter remissão dos sintomas respiratórios."]
      }, {
        nivel: 61,
        descricao: "SRAG não especificada, teste RT-PCR / RT Lamp não detectável no prazo",
        isolamento: false,
        processos: ["Caso um primeiro teste de RT-PCR tenha resultado negativo, um segundo teste RT-PCR, preferencialmente com material de via aérea baixa, deve ser realizado 48 horas após o primeiro. Sendo os dois negativos, o paciente poderá ser retirado da precaução para Covid-19. ", "Suspensão do isolamento é condicionada a estar há 24 horas sem febre sem uso de antitérmicos e ter remissão dos sintomas respiratórios."]
      }, {
        nivel: 62,
        descricao: "SRAG não especificada, Teste de Antígeno não detectável no prazo",
        isolamento: true,
        nr_dias: 20,
        nr_dias_pcr: 14,
        processos: ["O teste de antígeno é menos sensível que o RT-PCR, assim se for necessário suspender o isolamento é recomendado confirmar o resultado através do teste RT-PCR / RT-Lamp.", "Suspensão do isolamento é condicionada a estar há 24 horas sem febre sem uso de antitérmicos e ter remissão dos sintomas respiratórios.", "Indivíduos gravemente imunossuprimidos: Realizar isolamento por 20 dias a partir da data do início dos sintomas. A critério médico, pode ser requerido, nesta população, a apresentação de  RT-PCR não detectável para a descontinuidade do isolamento.", "Identificar, Rastrear, Monitorar e Isolar contatos próximos."]
      }, {
        nivel: 7,
        descricao: "SRAG não especificada, teste não reagente/não detectável fora do prazo",
        isolamento: true,
        nr_dias: 10,
        processos: ["Teste realizado fora do período recomendado, assim o resultado tem maior probabilidade de ser falso negativo.", "Suspensão do isolamento é condicionada a estar há 24 horas sem febre sem uso de antitérmicos e ter remissão dos sintomas respiratórios.", "Indivíduos gravemente imunossuprimidos: Realizar isolamento por 20 dias a partir da data do início dos sintomas. A critério médico, pode ser requerido, nesta população, a apresentação de  RT-PCR não detectável para a descontinuidade do isolamento.", "Monitorar caso suspeito preferencialmente a partir das primeiras 48 horas após a notificação do caso, no mínimo a cada 2 dias, por 14 dias e obrigatoriamente no 14º dia.", "Identificar, Rastrear, Monitorar e Isolar contatos próximos."]
      }, {
        nivel: 8,
        descricao: "SRAG não especificada, teste não reagente/não detectável fora do prazo",
        isolamento: true,
        nr_dias: 20,
        processos: ["Teste realizado fora do período recomendado, assim o resultado tem maior probabilidade de ser falso negativo.", "Suspensão do isolamento é condicionada a estar há 24 horas sem febre sem uso de antitérmicos e ter remissão dos sintomas respiratórios.", "Indivíduos gravemente imunossuprimidos: Realizar isolamento por 20 dias a partir da data do início dos sintomas. A critério médico, pode ser requerido, nesta população, a apresentação de  RT-PCR não detectável para a descontinuidade do isolamento.", "Identificar, Rastrear, Monitorar e Isolar contatos próximos."]
      }, {
        nivel: 91,
        descricao: "SG descartada",
        isolamento: false,
        processos: ["Suspender o isolamento e o monitoramento 24 horas após estar sem febre sem uso de antitérmicos e ter remissão dos sintomas."]
      }, {
        nivel: 92,
        descricao: "SRAG descartada",
        isolamento: false,
        processos: ["Suspender o isolamento e o monitoramento 24 horas após estar sem febre sem uso de antitérmicos e ter remissão dos sintomas."]
      }, {
        nivel: 10,
        descricao: "Caso Confirmado",
        isolamento: true,
        nr_dias: 10,
        processos: ["Monitorar caso confirmado preferencialmente a partir das primeiras 48 horas após a notificação do caso, no mínimo a cada 2 dias, por 14 dias e obrigatoriamente no 14º dia. ", "Identificar, Rastrear, Monitorar e Isolar contatos próximos."]
      }, {
        nivel: 11,
        descricao: "Contato Próximo de caso confirmado",
        isolamento: true,
        nr_dias: 10,
        nr_dias_pcr: 5,
        nr_dias_antigeno: 6,
        processos: ["Monitorar preferencialmente a partir das primeiras 48 horas após a notificação do caso, no mínimo a cada 2 dias, por 14 dias e obrigatoriamente no 14º dia."]
      }, {
        nivel: 111,
        descricao: "Contato Próximo de caso confirmado",
        isolamento: true,
        nr_dias: 10,
        processos: ["Monitorar preferencialmente a partir das primeiras 48 horas após a notificação do caso, no mínimo a cada 2 dias, por 14 dias e obrigatoriamente no 14º dia."]
      }, {
        nivel: 12,
        descricao: "Contato Próximo de caso confirmado",
        isolamento: true,
        nr_dias: 14,
        processos: ["Monitorar preferencialmente a partir das primeiras 48 horas após a notificação do caso, no mínimo a cada 2 dias, por 14 dias e obrigatoriamente no 14º dia. "]
      }, {
        nivel: 13,
        descricao: "Contato Próximo de caso confirmado",
        isolamento: true,
        nr_dias: 10,
        processos: ["Teste realizado fora do período recomendado.", "Não há mais prazo para realizar Teste RT-PCR ou Teste de Antígeno.", "Monitorar preferencialmente a partir das primeiras 48 horas após a notificação do caso, no mínimo a cada 2 dias, por 14 dias e obrigatoriamente no 14º dia. "]
      }, {
        nivel: 131,
        descricao: "Contato Próximo de caso confirmado",
        isolamento: true,
        nr_dias: 10,
        nr_dias_pcr: 5,
        nr_dias_antigeno: 6,
        processos: ["Teste realizado fora do período recomendado.", "Monitorar preferencialmente a partir das primeiras 48 horas após a notificação do caso, no mínimo a cada 2 dias, por 14 dias e obrigatoriamente no 14º dia. "]
      }, {
        nivel: 14,
        descricao: "Não é caso suspeito ou confirmado de Covid-19",
        isolamento: false,
        processos: []
      }, {
        nivel: 15,
        descricao: "Não é caso suspeito ou confirmado de Covid-19",
        isolamento: false,
        processos: []
      }
    ];

    calCovidMainView.prototype.onRender = function(view) {
      var atual, dia, mes;
      console.log('view');
      console.log('view');
      atual = new Date();
      dia = atual.getDate();
      dia = dia < 10 ? '0' + dia : dia;
      this.ui.dtatualdia.val(dia);
      mes = atual.getMonth() + 1;
      mes = mes < 10 ? '0' + mes : mes;
      this.ui.dtatualmes.val(mes);
      this.ui.dtatualano.val(atual.getFullYear());
      return this.ui.popover.popover({
        'html': true
      });
    };

    return calCovidMainView;

  })(Marionette.ItemView);
  return calCovidMainView;
});
