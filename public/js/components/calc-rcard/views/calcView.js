// Generated by CoffeeScript 2.7.0
define(['backbone', 'backbone.marionette'], function(Backbone, Marionette) {
  var calcRiscoCardioVascularMainView;
  calcRiscoCardioVascularMainView = (function() {
    class calcRiscoCardioVascularMainView extends Marionette.ItemView {
      initialize() {
        this.atual = 0;
        this.indiceResultado = 4;
        this.indiceIdade = 0;
        // 20a39, 40a49, 50a59, 60a69, 70a79
        //mulheres
        this.colesterolTotalMenor160 = [0, 0, 0, 0, 0];
        this.colesterolTotal160a199 = [4, 3, 2, 1, 1];
        this.colesterolTotal200a239 = [8, 6, 4, 2, 1];
        this.colesterolTotal240a279 = [11, 8, 5, 3, 2];
        this.colesterolTotalMaior280 = [13, 10, 7, 4, 2];
        this.escoreFumantes = [9, 7, 4, 2, 1];
        //homens
        this.colesterolTotalMenor160H = [0, 0, 0, 0, 0];
        this.colesterolTotal160a199H = [4, 3, 2, 1, 0];
        this.colesterolTotal200a239H = [7, 5, 3, 1, 0];
        this.colesterolTotal240a279H = [9, 6, 4, 2, 1];
        this.colesterolTotalMaior280H = [11, 8, 5, 3, 1];
        return this.escoreFumantesH = [8, 5, 3, 1, 1];
      }

      next() {
        if (this.ui.next.hasClass('disabled')) {
          return;
        }
        this.atual = this.$el.find('.item.active').data('indice');
        //console.log(@atual, @ui.criteriorisco.filter(':checked').val())
        if (this.atual === 2 && this.ui.criteriorisco.filter(':checked').val() === '1') {
          this.exibeResultado(30);
          this.trocaPara(this.indiceResultado);
          return;
        }
        if (this.atual < this.indiceResultado) {
          this.atual++;
        }
        if (this.atual === this.indiceResultado) {
          this.ui.next.addClass('disabled');
        } else {
          this.ui.next.removeClass('disabled');
        }
        this.ui.prev.removeClass('disabled');
        this.trocaPara(this.atual);
        return this.changeDados();
      }

      trocaPara(indice) {
        this.$el.find('.item.active').hide();
        this.$el.find('.item.active').removeClass('active');
        if (indice === this.indiceResultado) {
          // @ui.prev.addClass('disabled')
          this.ui.next.addClass('disabled');
        }
        //console.log 'trocaPara', indice
        this.$el.find('.item-' + indice).addClass('active').show();
        return this.$el.find('.p' + indice).addClass('active');
      }

      prev() {
        this.atual = this.$el.find('.item.active').data('indice');
        this.$el.find('.item.active').hide();
        this.$el.find('.item.active').removeClass('active');
        if (this.atual > 1) {
          this.$el.find('.p' + this.atual).removeClass('active');
          this.atual--;
        }
        if (this.atual === 1) {
          this.ui.prev.addClass('disabled');
        } else {
          this.ui.prev.removeClass('disabled');
        }
        this.ui.next.removeClass('disabled');
        return this.$el.find('.item-' + this.atual).addClass('active').show();
      }

      inicio() {
        //console.log 'inicio'
        this.ui.li.removeClass('active');
        this.$el.find('.p1').addClass('active');
        this.$el.find('.item.active').hide();
        this.$el.find('.item.active').removeClass('active');
        this.ui.prev.addClass('disabled');
        this.ui.next.removeClass('disabled');
        $('.item-1').addClass('active');
        return this.$el.find('.item.active').show();
      }

      changeDados() {
        var nivel, respostas;
        respostas = this.getDados();
        nivel = this.calculaEscore(respostas);
        return this.exibeResultado(nivel);
      }

      exibeResultado(nivel) {
        var conduta, self;
        conduta = this.getConduta(nivel);
        //# console.log conduta, 'escore', nivel
        this.ui.resp.html(conduta.descricao);
        self = this;
        this.ui.intervencoes.empty();
        return conduta.intervencoes.forEach(function(i) {
          return self.ui.intervencoes.append("<li class='list-group-item'>" + i + "</li>");
        });
      }

      getDados() {
        return [this.ui.idade.val(), this.ui.sexo.filter(':checked').val(), this.ui.fumante.filter(':checked').val(), this.ui.criteriorisco.filter(':checked').val(), this.ui.pressao.val(), this.ui.pressaotratada.filter(':checked').val(), this.ui.hdl.val(), this.ui.colesteroltotal.val()];
      }

      calculaEscore(d) {
        var escore, nivel;
        
        escore = 0;
        //idade indice
        if (d[0] >= 20 && d[0] <= 39) {
          this.indiceIdade = 0;
        }
        if (d[0] >= 40 && d[0] <= 44) {
          this.indiceIdade = 1;
        }
        if (d[0] >= 45 && d[0] <= 49) {
          this.indiceIdade = 2;
        }
        if (d[0] >= 50 && d[0] <= 54) {
          this.indiceIdade = 3;
        }
        if (d[0] >= 55 && d[0] <= 59) {
          this.indiceIdade = 4;
        }
        if (d[0] >= 60 && d[0] <= 64) {
          this.indiceIdade = 5;
        }
        if (d[0] >= 65 && d[0] <= 69) {
          this.indiceIdade = 6;
        }
        if (d[0] >= 70 && d[0] <= 74) {
          this.indiceIdade = 7;
        }
        if (d[0] >= 75) {
          this.indiceIdade = 8;
        }
        //# console.log escore, 'idade'
        if (d[1] === '1') {
          escore += this.calculaEscoreMasculino(d);
          switch (escore) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
              nivel = 1;
              break;
            case 5:
            case 6:
              nivel = 2;
              break;
            case 7:
              nivel = 3;
              break;
            case 8:
              nivel = 4;
              break;
            case 9:
              nivel = 5;
              break;
            case 10:
              nivel = 6;
              break;
            case 11:
              nivel = 8;
              break;
            case 12:
              nivel = 10;
              break;
            case 13:
              nivel = 12;
              break;
            case 14:
              nivel = 16;
              break;
            case 15:
              nivel = 20;
              break;
            case 16:
              nivel = 25;
              break;
            default:
              if (escore < 0) {
                nivel = -1;
              } else {
                nivel = 30;
              }
          }
        } else {
          escore += this.calculaEscoreFeminino(d);
          switch (escore) {
            case 9:
            case 10:
            case 11:
            case 12:
              nivel = 1;
              break;
            case 13:
            case 14:
              nivel = 2;
              break;
            case 15:
              nivel = 3;
              break;
            case 16:
              nivel = 4;
              break;
            case 17:
              nivel = 5;
              break;
            case 18:
              nivel = 6;
              break;
            case 19:
              nivel = 8;
              break;
            case 20:
              nivel = 11;
              break;
            case 21:
              nivel = 14;
              break;
            case 22:
              nivel = 17;
              break;
            case 23:
              nivel = 22;
              break;
            case 24:
              nivel = 27;
              break;
            default:
              if (escore < 9) {
                nivel = 1;
              } else {
                nivel = 30;
              }
          }
        }
        //# console.log escore, 'escore, nivel', nivel
        return nivel;
      }

      calculaEscoreFeminino(d) {
        var escore, idade;
        //console.log 'feminino'
        escore = 0;
        // colesterol hdl
        if (d[6] >= 60) {
          escore += -1;
        }
        if (d[6] >= 50 && d[6] <= 59) {
          escore += 0;
        }
        if (d[6] >= 40 && d[6] <= 49) {
          escore += 1;
        }
        if (d[6] < 40) {
          escore += 2;
        }
        //# console.log escore, 'colesterol hdl', d[6]
        idade = d[0];
        if (idade >= 20 && idade <= 34) {
          escore = escore - 7;
        }
        if (idade >= 35 && idade <= 39) {
          escore = escore - 3;
        }
        if (idade >= 40 && idade <= 44) {
          escore += 0;
        }
        if (idade >= 45 && idade <= 49) {
          escore += 3;
        }
        if (idade >= 50 && idade <= 54) {
          escore += 6;
        }
        if (idade >= 55 && idade <= 59) {
          escore += 8;
        }
        if (idade >= 60 && idade <= 64) {
          escore += 10;
        }
        if (idade >= 65 && idade <= 69) {
          escore += 12;
        }
        if (idade >= 70 && idade <= 74) {
          escore += 14;
        }
        if (idade >= 75 && idade <= 79) {
          escore += 16;
        }
        
        //# console.log escore, 'idade'    

        // pressao
        if (d[4] < 120) {
          escore += 0;
        }
        if (d[4] >= 120 && d[4] <= 129) {
          escore += 1;
        }
        if (d[4] >= 130 && d[4] <= 139) {
          escore += 2;
        }
        if (d[4] >= 140 && d[4] <= 159) {
          escore += 3;
        }
        if (d[4] >= 160) {
          escore += 4;
        }
        //# console.log escore, 'presao'    
        //presao tratada
        if (d[5] === '1') {
          escore += 2;
        }
        //# console.log escore, 'presao tratada'    
        escore += this.escoreFumantes[this.indiceIdade];
        //# console.log escore, 'fumante'    

        //colesterol total
        if (d[7] < 160) {
          escore += this.colesterolTotalMenor160[this.indiceIdade];
        }
        if (d[7] >= 160 && d[7] < 200) {
          escore += this.colesterolTotal160a199[this.indiceIdade];
        }
        if (d[7] >= 200 && d[7] < 240) {
          escore += this.colesterolTotal200a239[this.indiceIdade];
        }
        if (d[7] >= 240 && d[7] < 280) {
          escore += this.colesterolTotal240a279[this.indiceIdade];
        }
        if (d[7] >= 280) {
          escore += this.colesterolTotalMaior280[this.indiceIdade];
        }
        //# console.log escore, 'colesterol total'    
        return escore;
      }

      calculaEscoreMasculino(d) {
        var escore, idade;
        //console.log 'masculino'
        escore = 0;
        // colesterol hdl
        if (d[6] >= 60) {
          escore += -1;
        }
        if (d[6] >= 50 && d[6] <= 59) {
          escore += 0;
        }
        if (d[6] >= 40 && d[6] <= 49) {
          escore += 1;
        }
        if (d[6] < 40) {
          escore += 2;
        }
        //# console.log escore, 'colesterol hdl', d[6]
        idade = d[0];
        if (idade >= 20 && idade <= 34) {
          escore = escore - 9;
        }
        if (idade >= 35 && idade <= 39) {
          escore = escore - 4;
        }
        if (idade >= 40 && idade <= 44) {
          escore += 0;
        }
        if (idade >= 45 && idade <= 49) {
          escore += 3;
        }
        if (idade >= 50 && idade <= 54) {
          escore += 6;
        }
        if (idade >= 55 && idade <= 59) {
          escore += 8;
        }
        if (idade >= 60 && idade <= 64) {
          escore += 10;
        }
        if (idade >= 65 && idade <= 69) {
          escore += 11;
        }
        if (idade >= 70 && idade <= 74) {
          escore += 12;
        }
        if (idade >= 75) {
          escore += 13;
        }
        //# console.log escore, 'idade'

        // pressao
        if (d[4] < 120) {
          escore += 0;
        }
        if (d[4] >= 120 && d[4] <= 129) {
          escore += 0;
        }
        if (d[4] >= 130 && d[4] <= 139) {
          escore += 1;
        }
        if (d[4] >= 140 && d[4] <= 159) {
          escore += 1;
        }
        if (d[4] >= 160) {
          escore += 2;
        }
        //# console.log escore, 'presao'
        //presao tratada
        if (d[5] === '1' && d[4] >= 120) {
          escore += 1;
        }
        //# console.log escore, 'presao tratada'
        escore += this.escoreFumantesH[this.indiceIdade];
        //# console.log escore, 'fumante'  

        //colesterol total
        if (d[7] < 160) {
          escore += this.colesterolTotalMenor160H[this.indiceIdade];
        }
        if (d[7] >= 160 && d[7] < 200) {
          escore += this.colesterolTotal160a199H[this.indiceIdade];
        }
        if (d[7] >= 200 && d[7] < 240) {
          escore += this.colesterolTotal200a239H[this.indiceIdade];
        }
        if (d[7] >= 240 && d[7] < 280) {
          escore += this.colesterolTotal240a279H[this.indiceIdade];
        }
        if (d[7] >= 280) {
          escore += this.colesterolTotalMaior280H[this.indiceIdade];
        }
        //# console.log escore, 'colesterol total'  
        return escore;
      }

      getConduta(r) {
        var descricao, intervencoes, resultado;
        //# console.log r, 'teste resultados'
        descricao = "Baixo";
        intervencoes = ["Cessação do fumo", "Alimentação saudável", "Manutenção de peso/cintura", "Atividade Física", "Ênfase em medidas não famácológicas e diurético de baixa dose para hipertensão estágio 1, quando presente"];
        if (r > 9 && r < 20) {
          descricao = "Moderado";
          intervencoes = intervencoes.concat(["Intensificação sobre conselhos de estilo de vida", "Dieta com características cardioprotetoras", "Considerar farmacoterapia contra tabagismo", "Considerar estatinas se colesterol LDL elevado após medidas não famacológicas", "Cautela no uso de AINEs", "Ênfase no controle efetivo da hipertensão arterial sistêmica"]);
        }
        if (r >= 20) {
          descricao = "Alto";
          intervencoes = intervencoes.concat(["Estatinas (se não houver contraindicação)", "Ácido acetilsalicílico em homens acima de 55 anos e mulheres acima de 65 anos"]);
        }
        resultado = {
          nivel: r,
          descricao: descricao,
          intervencoes: intervencoes
        };
        return resultado;
      }

      onRender(view) {
        this.ui.item.hide();
        this.$el.find('.item.active').show();
        this.ui.prev.addClass('disabled');
        this.$el.find('.p1').addClass('active');
        return this.changeDados();
      }

    };

    calcRiscoCardioVascularMainView.prototype.model = new Backbone.Model();

    calcRiscoCardioVascularMainView.prototype.className = 'item calculadoras rcard'; //calcRiscoCardioVascular'

    calcRiscoCardioVascularMainView.prototype.template = '#calc-rcard-main';

    calcRiscoCardioVascularMainView.prototype.ui = {
      'resp': '.resultado',
      'item': '.item',
      'next': '#next',
      'prev': '#prev',
      'li': 'li',
      'inicio': '.inicio',
      'intervencoes': '.intervencoes',
      'idade': '#idadeId',
      'sexo': 'input:radio[name="optionRadios1"]',
      'fumante': 'input:radio[name="optionRadios2"]',
      'criteriorisco': 'input:radio[name="optionRadios3"]',
      'pressao': '#pasId',
      'pressaotratada': 'input:radio[name="optionRadios4"]',
      'hdl': '#hdlId',
      'colesteroltotal': '#ctId'
    };

    calcRiscoCardioVascularMainView.prototype.events = {
      'click @ui.next': 'next',
      'click @ui.prev': 'prev',
      'click @ui.inicio': 'inicio',
      'change @ui.idade, @ui.sexo, @ui.fumante, @ui.criteriorisco, @ui.pressao, @ui.pressaotratada, @ui.hdl': 'changeDados'
    };

    return calcRiscoCardioVascularMainView;

  }).call(this);
  return calcRiscoCardioVascularMainView;
});
