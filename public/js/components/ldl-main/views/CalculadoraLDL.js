// Generated by CoffeeScript 1.8.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['backbone', 'backbone.marionette'], function(Backbone, Marionette) {
  var LdlMainView;
  LdlMainView = (function(_super) {
    __extends(LdlMainView, _super);

    function LdlMainView() {
      return LdlMainView.__super__.constructor.apply(this, arguments);
    }

    LdlMainView.prototype.className = 'item calculadoras colesterol';

    LdlMainView.prototype.template = '#ldl-main-view';

    LdlMainView.prototype.ui = {
      'hd': '#hdlId',
      'ct': '#ctId',
      'tg': '#tgId',
      'resultado': '.resultado',
      'resposta': '.valor'
    };

    LdlMainView.prototype.events = {
      'change @ui.hd': 'changeDados',
      'change @ui.tg': 'changeDados',
      'change @ui.ct': 'changeDados'
    };

    LdlMainView.prototype.changeDados = function() {
      var dados, valor;
      dados = this.getDados();
      valor = this.calculaEscore(dados);
      if (valor) {
        this.ui.resposta.text(valor);
        return this.ui.resultado.show();
      } else {
        return this.ui.resultado.hide();
      }
    };

    LdlMainView.prototype.getDados = function() {
      var r;
      r = {
        ct: this.limpaNum(this.ui.ct.val() || '0', 0, 1000),
        tg: this.limpaNum(this.ui.tg.val() || '0', 0, 1000),
        hd: this.limpaNum(this.ui.hd.val() || '0', 0, 1000)
      };
      this.ui.ct.val(r.ct.replace('.', ','));
      this.ui.tg.val(r.tg.replace('.', ','));
      this.ui.hd.val(r.hd.replace('.', ','));
      return r;
    };

    LdlMainView.prototype.limpaNum = function(n, min, max, a) {
      var sohOPrim;
      if (a == null) {
        a = 0;
      }
      sohOPrim = function() {
        a++;
        if (a === 1) {
          return '.';
        } else {
          return '';
        }
      };
      n = n.replace(/\s/img, '');
      n = n.replace(',', '.');
      n = n.replace('.', sohOPrim());
      n = parseFloat(n);
      switch (true) {
        case n <= min:
          return min + '';
        case n >= max:
          return max + '';
        default:
          return n + '';
      }
    };

    LdlMainView.prototype.calculaEscore = function(d) {
      var colesterol, ct, hd, tg;
      ct = parseFloat(d.ct);
      tg = parseFloat(d.tg);
      hd = parseFloat(d.hd);
      if (!(ct && tg && hd)) {
        return false;
      }
      return colesterol = (ct - hd - (tg / 5)).toFixed(2);
    };

    LdlMainView.prototype.onRender = function(view) {
      return this.ui.resultado.hide();
    };

    return LdlMainView;

  })(Marionette.ItemView);
  return LdlMainView;
});
