// Generated by CoffeeScript 1.8.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define([], function() {
  var SlideQueSimples;
  SlideQueSimples = (function(_super) {
    __extends(SlideQueSimples, _super);

    function SlideQueSimples() {
      return SlideQueSimples.__super__.constructor.apply(this, arguments);
    }

    SlideQueSimples.prototype.className = 'container-fluid questao';

    SlideQueSimples.prototype.tagName = 'section';

    SlideQueSimples.prototype.initialize = function() {};

    SlideQueSimples.prototype.template = function(data) {
      var opcs;
      if (_.isArray(data.conteudo.opcoes[0])) {
        opcs = data.conteudo.opcoes.map(function(arrOp, i) {
          return {
            correta: arrOp[1],
            texto: arrOp[0],
            originalIdx: i
          };
        });
        if (!data.dontShuffle) {
          data.conteudo.opcoes = _.shuffle(opcs);
        } else {
          data.conteudo.opcoes = opcs;
        }
      }
      return _.template($('script#caso-slides-queSimples').html())(data);
    };

    SlideQueSimples.prototype.ui = {
      btnResp: 'button.responder',
      opts: '.radio',
      saiba: '.resposta',
      correcao: '.alert',
      acerto: '.alert h2.acerto',
      corrIco: '.alert i'
    };

    SlideQueSimples.prototype.events = {
      'click button.responder': 'respondeu',
      'click .radio': 'tocado'
    };

    SlideQueSimples.prototype.respondeu = function(evt) {
      this.ui.opts.bind('click', function() {
        return false;
      });
      this.ui.btnResp.hide();
      this.ui.opts.addClass('disabled').css({
        color: '#888'
      }).on('click', function() {
        return false;
      });
      this.ui.opts.find(':input').attr('tabIndex', '-1');
      return this.corrige();
    };

    SlideQueSimples.prototype.onRender = function() {
      this.ui.btnResp.addClass('disabled btn-default');
      return this.ui.btnResp.text('Selecione para responder');
    };

    SlideQueSimples.prototype.ehTocado = false;

    SlideQueSimples.prototype.respondido = false;

    SlideQueSimples.prototype.tocado = function(evt) {
      if (this.ehTocado) {
        return true;
      }
      this.ehTocado = true;
      return this.ui.btnResp.removeClass('disabled btn-default').addClass('btn-info').text('Responder');
    };

    SlideQueSimples.prototype.getMarcada = function() {
      var m;
      m = this.ui.opts.find('input:checked');
      return m.data('originalidx');
    };

    SlideQueSimples.prototype.getCorreta = function() {
      var o, ops, _i, _len;
      ops = this.model.get('conteudo').opcoes;
      for (_i = 0, _len = ops.length; _i < _len; _i++) {
        o = ops[_i];
        if (o.correta) {
          return o.originalIdx;
        }
      }
    };

    SlideQueSimples.prototype.corrige = function() {
      var acertoBadge, acertou, azul, badge, conceito, corr, div, ico, labelOpcaoCorr, labelOpcaoMar, media, resp, salvaResposta, score, scoreAtu, self, strConceito, tipo, totalScore, verde, vermelho, _ref;
      self = this;
      corr = this.getCorreta();
      resp = this.getMarcada();
      acertou = corr === resp;
      labelOpcaoCorr = this.ui.opts.find(":input[data-originalidx=\"" + corr + "\"]").parent();
      labelOpcaoMar = this.ui.opts.find(":input[data-originalidx=\"" + resp + "\"]").parent();
      _ref = ['#e74c3c', '#3498db', '#27ae60'], vermelho = _ref[0], azul = _ref[1], verde = _ref[2];
      if (acertou) {
        labelOpcaoCorr.css('color', verde);
      } else {
        labelOpcaoCorr.css('color', azul);
        labelOpcaoMar.css('color', vermelho);
      }
      conceito = $('li.score');
      scoreAtu = parseInt(conceito.data('score'));
      if (!scoreAtu) {
        scoreAtu = 0;
      }
      media = acertou ? 100 : 0;
      totalScore = scoreAtu + media;
      div = 2;
      if (scoreAtu === 0) {
        div = 1;
      }
      score = totalScore / div;
      conceito.data('score', score);
      strConceito = this.getConceito(score);
      conceito.find('.conceito').text(strConceito);
      if (!this.silent) {
        salvaResposta = {
          atividade: this.model.collection.caso.get('_id'),
          seqid: this.$el.data('seqid'),
          modulo: window.modulo._id,
          marcadas: [this.getMarcada()],
          escore: media,
          ts: Date.now()
        };
        if (App.user) {
          App.progresso.create(salvaResposta);
        }
        $('body').animate({
          scrollTop: self.$el.find('.opcoes').offset().top - 85
        }, 1000);
      }
      badge = $('li.quest > span[target="' + this.$el.prop('id') + '"]');
      badge.addClass('corrigido');
      this.ui.acerto.text(acertou ? 'Acertou' : 'Incorreto');
      ico = acertou ? 'checkbox-marked-circle' : 'emoticon-sad';
      tipo = acertou ? 'success' : 'danger';
      acertoBadge = acertou ? 'correto' : 'errado';
      this.ui.corrIco.addClass("mdi-" + ico);
      this.ui.correcao.addClass("alert-" + tipo + " in").removeClass('out hide');
      this.ui.saiba.addClass('in').removeClass('out hide');
      badge.addClass("" + acertoBadge);
      this.respondido = true;
      return this.trigger('respondeu', this);
    };

    SlideQueSimples.prototype['getConceito'] = function(conceito) {
      switch (false) {
        case !(conceito >= 95):
          return 'A+';
        case !(conceito >= 90):
          return 'A';
        case !(conceito >= 80):
          return 'B+';
        case !(conceito >= 70):
          return 'B';
        case !(conceito >= 60):
          return 'C+';
        case !(conceito >= 50):
          return 'C';
        case !(conceito >= 40):
          return 'D+';
        case !(conceito >= 30):
          return 'D';
        case !(conceito >= 20):
          return 'E+';
        default:
          return 'E';
      }
    };

    return SlideQueSimples;

  })(Marionette.ItemView);
  return SlideQueSimples;
});
