// Generated by CoffeeScript 1.8.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['marionette'], function(Marionette) {
  var VideoLayout;
  return VideoLayout = (function(_super) {
    __extends(VideoLayout, _super);

    function VideoLayout() {
      return VideoLayout.__super__.constructor.apply(this, arguments);
    }

    VideoLayout.prototype.template = _.template($('#video-player-video').html());

    VideoLayout.prototype.className = 'container-fluid';

    VideoLayout.prototype.initialize = function() {
      return console.log(this.model, 'modelo video');
    };

    VideoLayout.prototype.events = {
      'click .gotoReturn': 'gotoReturn'
    };

    VideoLayout.prototype.gotoReturn = function() {
      if (App.appRouter.historico.length > 1) {
        return App.appRouter.previous();
      } else {
        return App.appRouter.navigate("comp/materiais", true);
      }
    };

    VideoLayout.prototype.onRender = function() {
      var $el, posterName, videoEl;
      posterName = this.model.get('poster');
      console.log(this.model, 'modelo video');
      $el = $(this.el);
      videoEl = $el.find('video');
      videoEl.prop('volume', 0.5);
      return videoEl.on('playing', function() {
        var jaAnotou, jaeh, _base;
        if (App.user) {
          if ((_base = App.user).especifico == null) {
            _base.especifico = [];
          }
          jaAnotou = _.findWhere(App.user.especifico, {
            modulo: window.modulo._id,
            name: posterName
          });
          jaeh = null;
          if (jaAnotou) {
            jaeh = jaAnotou.value;
          }
          if (jaeh) {
            return jaeh;
          }
          App.user.especifico.push({
            modulo: window.modulo._id,
            name: posterName,
            value: true
          });
          return App.local.set("user", App.user);
        }
      });
    };

    VideoLayout.prototype.onDestroy = function() {
      $('body').removeAttr('style').css({
        display: 'block'
      });
      if (App.main.currentView) {
        return App.appRouter.previous();
      }
      return App.appRouter.navigate('/', {
        'trigger': true
      });
    };

    return VideoLayout;

  })(Marionette.ItemView);
});
