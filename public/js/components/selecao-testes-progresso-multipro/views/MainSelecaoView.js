// Generated by CoffeeScript 1.8.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['marionette'], function(Marionette) {
  var MainSelecaoLayout;
  return MainSelecaoLayout = (function(_super) {
    __extends(MainSelecaoLayout, _super);

    function MainSelecaoLayout() {
      return MainSelecaoLayout.__super__.constructor.apply(this, arguments);
    }

    MainSelecaoLayout.prototype.template = '#selecao-testes-progresso-multipro-main';

    MainSelecaoLayout.prototype.className = 'container selecao-teste-multipro';

    MainSelecaoLayout.prototype.initialize = function() {
      var progresso, user;
      user = App.user, progresso = App.progresso;
      this.collection.each(function(teste) {
        var g, lockTesteFinal, rs;
        if (user) {
          rs = progresso.where({
            'atividade': teste.get('_id')
          }).map(function(i) {
            return i.attributes;
          });
          g = progresso.geral;
          lockTesteFinal = false;
          if (!((g.percCasosConcluTotal >= 70) && (g.percGeralAcertoCasos >= 70))) {
            lockTesteFinal = true;
          }
        }
        teste.set({
          'respostas': rs || []
        });
        return teste.set({
          lockTesteFinal: lockTesteFinal
        });
      });
      return this;
    };

    MainSelecaoLayout.prototype.events = {
      'click .emitir-certificado': 'emitirCertificado'
    };

    MainSelecaoLayout.prototype.emitirCertificado = function(evt) {
      evt.stopPropagation();
      return App.execute('certificado', function() {
        return console.log(arguments);
      });
    };

    MainSelecaoLayout.prototype.gotoTeste = function(evt) {
      var id, isPos, lock, teste, url;
      id = $(evt.target).closest('.teste').data('id');
      url = "comp/selecao-testes-progresso/teste-bloqueado";
      lock = App.masterFinalLock();
      teste = App.testes.where({
        _id: id
      });
      isPos = false;
      if (teste.length > 0) {
        isPos = teste[0].get('posTeste');
      }
      if (!(isPos && lock)) {
        url = App['selecao-testes-progresso-multipro'].routeFactory(id);
      }
      console.log(id, url, lock, isPos);
      return Backbone.history.navigate(url, {
        trigger: true
      });
    };

    MainSelecaoLayout.prototype.onRender = function() {
      return this.$el.find('.teste').on('click', this.gotoTeste);
    };

    return MainSelecaoLayout;

  })(Marionette.ItemView);
});
