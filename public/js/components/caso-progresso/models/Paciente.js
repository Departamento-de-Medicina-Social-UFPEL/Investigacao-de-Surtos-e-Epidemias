// Generated by CoffeeScript 1.8.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define([], function() {
  var Paciente;
  Paciente = (function(_super) {
    __extends(Paciente, _super);

    function Paciente() {
      return Paciente.__super__.constructor.apply(this, arguments);
    }

    Paciente.prototype['initialize'] = function(options) {
      var fe, idade, sexo;
      idade = options.idade.match(/\d{1,}/)[0];
      sexo = options.sexo;
      if (options.idade.indexOf('a') === -1) {
        idade = 1;
      }
      fe = (function() {
        switch (sexo) {
          case 'feminino':
            return 'fenoMulher';
          case 'masculino':
            return 'fenoHomem';
        }
      })();
      fe = (function() {
        switch (false) {
          case !(idade <= 13):
            return 'fenoCrianca';
          case !(idade <= 3):
            return 'fenoBebe';
        }
      })();
      return this.set('fenotipo', fe);
    };

    return Paciente;

  })(Backbone.Model);
  return Paciente;
});
