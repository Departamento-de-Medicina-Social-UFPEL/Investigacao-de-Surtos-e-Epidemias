// Generated by CoffeeScript 2.7.0
define(['../models/Paciente', '../collections/SlidesColl', './SlidesColl', './Introbox', './Paciente', 'utils'], function(PacienteModel, SlidesColl, SlidesCollView, IntroboxView, PacienteView, utils) {
  var CasoView;
  CasoView = (function() {
    class CasoView extends Marionette.LayoutView {
      initialize() {}

      vaiPraQuestaoDaVez() {
        var page;
        page = $('html, body');
        page.on("scroll mousedown wheel DOMMouseScroll mousewheel keyup touchmove", function() {
          page.stop();
          return page.off("scroll mousedown wheel DOMMouseScroll mousewheel keyup touchmove");
        });
        return page.animate({
          scrollTop: $("section.slide.daVez").offset().top - 85
        }, 600, function() {
          return page.off("scroll mousedown wheel DOMMouseScroll mousewheel keyup touchmove");
        });
      }

      confirmaRecomeca() {
        var self;
        self = this;
        this.ui.confirmaReset.modal({
          keyboard: false
        });
        return this.ui.confirmaReset.find('#delete').on('click', function() {
          var i, len, page, respDest, resposta;
          respDest = App.progresso.getByAtividadeId(self.model.get('_id'));
          for (i = 0, len = respDest.length; i < len; i++) {
            resposta = respDest[i];
            resposta.destroy();
          }
          App.progresso.calculaProgressoGeral();
          App.progresso.trigger('change');
          // self.model.unset 'respostas'
          page = $('html, body');
          page.removeClass('modal-open');
          return Backbone.history.loadUrl(Backbone.history.fragment);
        });
      }

      onRender() {
        var _this, handlerAtualizaProgresso, slides, slidesView;
        // console.log @ui.estResp
        this.paciente = new PacienteModel(this.model.get('paciente'));
        // console.log @model, @paciente
        this.allSlides = new SlidesColl(this.model.get('slides'), this.paciente, this.model);
        this.addRegions({
          introReg: '.caso #introducao',
          pacienteReg: '.caso #pacienteTopo',
          slidesReg: '.caso #slidesLista'
        });
        this.pacienteReg.show(new PacienteView({
          model: this.paciente
        }));
        this.introReg.show(new IntroboxView({
          model: this.model
        }));
        slides = this.model.get('slides');
        if (slides[0].tipo === 'intro') {
          slides = slides.slice(1);
        }
        slidesView = new SlidesCollView({
          collection: new SlidesColl(slides, this.paciente, this.model)
        });
        this.slidesReg.show(slidesView);
        _this = this;
        handlerAtualizaProgresso = function() {
          return this.getRespostasDeste();
        };
        // @rodapeReg.currentView.render()
        if (App.user) {
          this.listenTo(App.progresso, 'fetched change', handlerAtualizaProgresso);
        }
        if (App.progresso) {
          App.progresso.temNovosBadges(true);
        }
        setTimeout(function() {
          return $.material.init();
        }, 10);
        this.getRespostasDeste();
        return this.verificaConcluinte();
      }

      getRespostasDeste() {
        var respostas;
        if (!App.user) {
          // console.log "'caso' -> #{@model.get '_id'}"
          return null;
        }
        respostas = App.progresso.getByAtividadeId(this.model.get('_id'));
        if (respostas.length > 0) {
          this.model.set({respostas});
          this.assinalaMarcadas();
          return this.trigger('novasRespostas');
        }
      }

      ['assinalaMarcadas']() {
        var casoId, mediaG, questoes, respostas, self, slides, soma, texto;
        self = this;
        if (!this.slidesReg) {
          setTimeout(function() {
            return self.assinalaMarcadas;
          }, 300);
          return null;
        }
        // @slidesReg
        casoId = this.model.get('_id');
        slides = this.slidesReg.currentView.children;
        // console.log "slides = do @slidesReg.currentView.children", slides
        respostas = this.model.get('respostas');
        if (!slides) {
          return null;
        }
        questoes = slides.filter(function(view) {
          return view.model.get('tipo').match(/questao.*/ig);
        });
        soma = respostas.reduce(function(memo, resp) {
          return memo + resp.get('escore');
        }, 0);
        mediaG = soma / respostas.length;
        texto = '';
        this.ui.estResp.find('.mensagem').empty();
        if (respostas.length === questoes.length) {
          this.ui.estResp.find('#btnContinua').hide();
          this.ui.estResp.find('#btnRecomeca').removeClass('btn-xs').addClass('btn-sm');
          texto = `Você já respondeu todas as ${questoes.length} questões deste caso.`;
          this.ui.estResp.find('.mensagem').append($('<p></p>').text(texto));
          texto = `Sua média de acertos final foi de ${mediaG.toFixed(2).replace('.', ',')}%.`;
          this.ui.estResp.find('.mensagem').append($('<p></p>').text(texto));
        } else {
          texto = `Você já respondeu ${respostas.length} das ${questoes.length} questões deste caso.`;
          this.ui.estResp.find('.mensagem').append($('<p></p>').text(texto));
          texto = `Sua média de acertos até agora é de ${mediaG.toFixed(2).replace('.', ',')}%.`;
          this.ui.estResp.find('.mensagem').append($('<p></p>').text(texto));
        }
        this.ui.estResp.removeClass('hide').show();
        // console.log @ui.estResp
        return respostas.forEach(function(resposta) {
          var e, i, len, marca, marcadas, opcs, quest, seqid;
          seqid = resposta.get('seqid');
          quest = questoes[seqid];
          if (quest) {
            opcs = quest.$el.find('.opcoes');
            marcadas = resposta.get('marcadas');
            for (i = 0, len = marcadas.length; i < len; i++) {
              marca = marcadas[i];
              e = opcs.find(`[data-originalidx="${marca}"]:input`);
              // console.log "MARCA RESPOSTA",seqid, marca, e
              e.attr('checked', true);
              e.parent().removeClass('unchecked').addClass('checked');
            }
            quest.silent = true;
            quest.tocado();
            return quest.ui.btnResp.click();
          }
        });
      }

      verificaConcluinte() {
        var self;
        self = this;
        // console.log 'modelo caso', self.model
        return App.user.ofertas.forEach(function(o) {
          var nucleos;
          nucleos = self.model.get('profissional').split(',').map(function(n) {
            return n.trim().toLowerCase();
          });
          // console.log nucleos, self.model.get('profissional').split(','), 'nucleos'
          if (o.modulo === App.moduloId && (nucleos.indexOf(o.conteudo) > -1 || o.conteudo === 'interdisciplinar') && o.dt_conclusao) {
            self.ui.recomeca.hide();
            return self.ui.continua.hide();
          }
        });
      }

    };

    CasoView.prototype.className = 'caso-main container';

    CasoView.prototype.template = '#caso-progresso-main';

    CasoView.prototype.ui = {
      estResp: '.caso #estadoResposta',
      confirmaReset: '.caso #estadoResposta #confirmaRecomeca',
      recomeca: '#btnRecomeca',
      continua: '#btnContinua'
    };

    CasoView.prototype.events = {
      'click @ui.estResp #btnRecomeca': 'confirmaRecomeca',
      'click @ui.estResp #btnContinua': 'vaiPraQuestaoDaVez'
    };

    return CasoView;

  }).call(this);
  return CasoView;
});
