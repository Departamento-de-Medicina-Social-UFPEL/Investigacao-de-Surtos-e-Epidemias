// Generated by CoffeeScript 1.8.0
define(['./collections/Progresso', './models/Caso', './controller', './routes', 'backbone'], function(Progresso, Caso, controller, routes, Backbone) {
  return function(component, parentApp, Backbone, Marionette, $, _) {
    var ListaAtividades, appC, appComponents, iterador, key, path, prefixedRoutes, selecao, selecaoTestes, unidades, val, _i, _len;
    prefixedRoutes = {};
    for (key in routes) {
      val = routes[key];
      path = "comp/" + this.moduleName + key;
      prefixedRoutes[path] = val;
    }
    parentApp.appRouter.processAppRoutes(controller, prefixedRoutes);
    ListaAtividades = Backbone.Collection.extend({
      model: Caso
    });
    parentApp.atividades = new ListaAtividades;
    parentApp.casos = new ListaAtividades;
    parentApp.testes = new ListaAtividades;
    parentApp.progresso = new Progresso;
    appComponents = [];
    appComponents = appComponents.concat(_.where(window.modulo.components, {
      folder: 'listatestes'
    }));
    iterador = function(u) {
      if (u.folder === 'unidade-progresso') {
        if (u.short !== "Unidade extra") {
          return true;
        }
      }
      return false;
    };
    unidades = window.modulo.components.filter(iterador);
    selecao = _.where(window.modulo.components, {
      folder: 'selecao-progresso'
    });
    selecaoTestes = _.where(window.modulo.components, {
      folder: 'selecao-testes-progresso'
    });
    if (unidades.length === 0) {
      appComponents = appComponents.concat(selecao);
      appComponents = appComponents.concat(selecaoTestes);
    } else {
      appComponents = appComponents.concat(unidades);
    }
    for (_i = 0, _len = appComponents.length; _i < _len; _i++) {
      appC = appComponents[_i];
      if (!appC.resource) {
        break;
      }
      appC.resource.casos.map(function(c) {
        if (appC.folder === 'listatestes') {
          c.tipo = 'teste';
          c.posTeste = !(/inicial/img.test(c.titulo));
          parentApp.testes.add(c);
        }
        if (unidades.length > 0) {
          if (appC.unidade) {
            c.unidade = appC.unidade;
          }
          if (appC.folder === 'unidade-progresso') {
            c.tipo = c.tipo ? c.tipo : 'caso';
            parentApp.casos.add(c);
          }
        } else {
          if (appC.folder === 'selecao-progresso') {
            c.tipo = 'caso';
            parentApp.casos.add(c);
          }
        }
        parentApp.atividades.add(c);
        return c;
      });
    }
    parentApp.on('beforeStart', function() {
      var menuEntry;
      menuEntry = {
        'style': 'link',
        'link': '#comp/progresso',
        'icone': 'mdi-speedometer',
        'texto': "Meu Progresso"
      };
      return App.menuEntries.push(menuEntry);
    });
    parentApp.on('beforeHistoryStart', function() {
      var local, progresso, respostas, socket, user;
      progresso = App.progresso, local = App.local, user = App.user, socket = App.socket;
      if (local) {
        if (user) {
          if (local) {
            respostas = local.get("respostas-" + user.cpf);
            if (respostas && respostas.length > 0) {
              progresso.reset(respostas);
            }
            return progresso.calculaProgressoGeral();
          }
        }
      }
    });
    parentApp.masterFinalLock = function() {
      var lockTesteFinal;
      lockTesteFinal = [parentApp.finalLockEnfermagem(), parentApp.finalLockMedicina(), parentApp.finalLockOdontologia()];
      return lockTesteFinal;
    };
    parentApp.masterFinalLockInterdisciplinar = function() {
      var g, lockTesteFinal, progresso, user;
      user = App.user, progresso = App.progresso;
      lockTesteFinal = true;
      if (user && progresso) {
        g = progresso.geral;
        if ((g.percCasosConcluTotal >= 70) && (g.percGeralAcertoCasos >= 70)) {
          lockTesteFinal = false;
        }
      }
      return lockTesteFinal;
    };
    parentApp.masterFinalLockUnidade = function(unidade) {
      var g, lockTesteFinal, progresso, user;
      user = App.user, progresso = App.progresso;
      lockTesteFinal = true;
      if (user && progresso) {
        g = progresso.geral;
        if (g.unidade[unidade].numCasosUnidade === 0) {
          lockTesteFinal = false;
        } else {
          if ((g.unidade[unidade].percCasosConclu >= 70) && (g.unidade[unidade].percGeralAcertoCasos >= 70)) {
            lockTesteFinal = false;
          }
        }
      }
      return lockTesteFinal;
    };
    parentApp.masterFinalLockEnfermagem = function() {
      var g, lockTesteFinalEnfermagem, progresso, user;
      user = App.user, progresso = App.progresso;
      lockTesteFinalEnfermagem = true;
      if (user && progresso) {
        g = progresso.geral;
        if ((g.percCasosConcluNucleoEnfermagem >= 70) && (g.percGeralAcertoCasosNucleoEnfermagem >= 70)) {
          lockTesteFinalEnfermagem = false;
        }
      }
      return lockTesteFinalEnfermagem;
    };
    parentApp.masterFinalLockMedicina = function() {
      var g, lockTesteFinalMedicina, progresso, user;
      user = App.user, progresso = App.progresso;
      lockTesteFinalMedicina = true;
      if (user && progresso) {
        g = progresso.geral;
        if ((g.percCasosConcluNucleoMedicina >= 70) && (g.percGeralAcertoCasosNucleoMedicina >= 70)) {
          lockTesteFinalMedicina = false;
        }
      }
      return lockTesteFinalMedicina;
    };
    parentApp.masterFinalLockOdontologia = function() {
      var g, lockTesteFinalOdontologia, progresso, user;
      user = App.user, progresso = App.progresso;
      lockTesteFinalOdontologia = true;
      if (user && progresso) {
        g = progresso.geral;
        if ((g.percCasosConcluNucleoOdontologia >= 70) && (g.percGeralAcertoCasosNucleoOdontologia >= 70)) {
          lockTesteFinalOdontologia = false;
        }
      }
      return lockTesteFinalOdontologia;
    };
    parentApp.masterElegivelCert = function() {
      var elegivel, flag;
      flag = true;
      if (window.modulo.fl_por_unidade) {
        unidades = _.where(window.modulo.components, {
          folder: 'unidade-progresso'
        }).filter(function(c) {
          return c.unidade;
        }).map(function(c) {
          return c.unidade;
        });
        elegivel = unidades.map(function(o) {
          return App["masterElegivelCertUnidade"](o);
        });
      } else {
        elegivel = window.modulo.ofertasAbertas.map(function(o) {
          var conteudo;
          conteudo = o.conteudo;
          conteudo = conteudo[0].toUpperCase() + conteudo.slice(1);
          return App["masterElegivelCert" + conteudo]();
        });
      }
      elegivel.forEach(function(e) {
        return flag = flag && e;
      });
      return flag;
    };
    parentApp.masterElegivelCertEnfermagem = function() {
      var acerto, casos, elegivelEnfermagem, g, progresso, tfinal, user;
      user = App.user, progresso = App.progresso;
      elegivelEnfermagem = false;
      if (user && progresso) {
        g = progresso.geral;
        casos = g.percCasosConcluNucleoEnfermagem;
        acerto = g.percGeralAcertoCasosNucleoEnfermagem;
        tfinal = g.percAcertoPosTesteEnfermagem;
        elegivelEnfermagem = casos >= 70 && acerto >= 70 && tfinal >= 70;
      }
      return elegivelEnfermagem;
    };
    parentApp.masterElegivelCertMedicina = function() {
      var acerto, casos, elegivelMedicina, g, progresso, tfinal, user;
      user = App.user, progresso = App.progresso;
      elegivelMedicina = false;
      if (user && progresso) {
        g = progresso.geral;
        casos = g.percCasosConcluNucleoMedicina;
        acerto = g.percGeralAcertoCasosNucleoMedicina;
        tfinal = g.percAcertoPosTesteMedicina;
        elegivelMedicina = casos >= 70 && acerto >= 70 && tfinal >= 70;
      }
      return elegivelMedicina;
    };
    parentApp.masterElegivelCertOdontologia = function() {
      var acerto, casos, elegivelOdontologia, g, progresso, tfinal, user;
      user = App.user, progresso = App.progresso;
      elegivelOdontologia = false;
      if (user && progresso) {
        g = progresso.geral;
        casos = g.percCasosConcluNucleoOdontologia;
        acerto = g.percGeralAcertoCasosNucleoOdontologia;
        tfinal = g.percAcertoPosTesteOdontologia;
        elegivelOdontologia = casos >= 70 && acerto >= 70 && tfinal >= 70;
      }
      return elegivelOdontologia;
    };
    parentApp.masterElegivelCertInterdisciplinar = function() {
      var acerto, casos, elegivel, g, progresso, tfinal, user;
      user = App.user, progresso = App.progresso;
      elegivel = false;
      if (user && progresso) {
        g = progresso.geral;
        casos = g.percCasosConcluTotal;
        acerto = g.percGeralAcertoCasos;
        tfinal = g.percAcertoPosTesteInterdisciplinar;
        elegivel = casos >= 70 && acerto >= 70 && tfinal >= 70;
      }
      return elegivel;
    };
    return parentApp.masterElegivelCertUnidade = function(u) {
      var acerto, casos, elegivel, g, progresso, tfinal, user;
      user = App.user, progresso = App.progresso;
      elegivel = false;
      if (user && progresso) {
        g = progresso.geral;
        casos = g.unidade[u].percCasosConclu;
        acerto = g.unidade[u].percGeralAcertoCasos;
        tfinal = g.unidade[u].percAcertoPosTeste;
        elegivel = (casos >= 70 || g.unidade[u].numCasosUnidade === 0) && (acerto >= 70 || g.unidade[u].numCasosUnidade === 0) && tfinal >= 70;
      }
      return elegivel;
    };
  };
});
