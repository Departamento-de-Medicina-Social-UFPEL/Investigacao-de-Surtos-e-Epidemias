// Generated by CoffeeScript 1.8.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define([], function() {
  var SincronizaProgressoView;
  SincronizaProgressoView = (function(_super) {
    __extends(SincronizaProgressoView, _super);

    function SincronizaProgressoView() {
      return SincronizaProgressoView.__super__.constructor.apply(this, arguments);
    }

    SincronizaProgressoView.prototype.initialize = function() {};

    SincronizaProgressoView.prototype.className = 'col-xs-12 col-sm-6 col-md-6 col-lg-6 inscricoes-item';

    SincronizaProgressoView.prototype.template = '#progresso-sincronizador';

    SincronizaProgressoView.prototype.ui = {
      'sinc': '.btn-sinc',
      'sincBar': '#progressbar-sinc',
      'btnMenu': '.titulo-block-progresso',
      'sincText': '.text-sinc-progresso'
    };

    SincronizaProgressoView.prototype.events = {
      'click @ui.sinc': 'sincroniza'
    };

    SincronizaProgressoView.prototype.sincroniza = function() {
      var flag_inscrito, self;
      console.log('sincroniza');
      self = this;
      flag_inscrito = true;
      self.ui.sincText.removeClass('alert').removeClass('alert-info').removeClass('alert-danger').html('');
      self.ui.sincBar.parent().show();
      return setTimeout(function() {
        var mensagem;
        self.ui.sincBar.css({
          'width': '50%'
        });
        if (!navigator.onLine || !flag_inscrito || App.progresso.length === 0) {
          mensagem = 'Ocorreu um erro ao sincronizar seu progresso, verifique sua conexão e tente novamente.';
          if (App.progresso.length === 0) {
            mensagem = 'Você ainda não possui progressos, faça alguma atividade e tente novamente!';
          }
          self.ui.sincText.addClass('alert alert-danger').html(mensagem);
          return self.ui.sincBar.parent().hide().children().css({
            'width': '10%'
          });
        } else {
          return App.execute('storeUser', App.user, function(dataUser) {
            var c, dt, mensagemErro, _i, _len, _ref;
            console.log('retorno store sincronize', dataUser);
            if (!dataUser.ok && !dataUser.certificado) {
              self.ui.sincBar.parent().hide().children().css({
                'width': '10%'
              });
              return self.ui.sincText.addClass('alert alert-danger').html('Ocorreu um erro ao sincronizar seu progresso, verifique sua conexão e tente novamente.');
            } else {
              dt = new Date();
              mensagemErro = 'Progresso sincronizado em: ' + dt.toLocaleString();
              if (dataUser.certificado) {
                mensagemErro = '<ul class="list-group">';
                _ref = dataUser.certificado;
                for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                  c = _ref[_i];
                  console.log('uma certificada', c);
                  mensagemErro += "<li class='list-group-item'><a class='list-group-item' href='" + c.url_certificado + "'> Clique aqui para obter certificado: " + c.conteudo + "</a></li>";
                }
                mensagemErro += '</ul>';
              }
              setTimeout(function() {
                return self.ui.sincBar.css({
                  'width': '100%'
                });
              }, 1000);
              return setTimeout(function() {
                self.ui.sincBar.parent().hide().children().css({
                  'width': '10%'
                });
                return self.ui.sincText.addClass('alert alert-info').html(mensagemErro);
              }, 1000);
            }
          });
        }
      }, 1000);
    };

    SincronizaProgressoView.prototype.inscreva = function() {
      console.log('inscreva-se');
      return App.appRouter.navigate('#comp/cadastro', {
        'trigger': true
      });
    };

    SincronizaProgressoView.prototype.paraClick = function(evt) {
      evt.preventDefault();
      return evt.stopPropagation();
    };

    SincronizaProgressoView.prototype.verificaInscricoes = function() {
      var fl_inscrito, hoje, self;
      self = this;
      hoje = new Date();
      fl_inscrito = false;
      if (App.user.ofertas) {
        App.user.ofertas.forEach(function(o) {
          if (o.modulo === App.moduloId && o.conteudo === self.model.get('nucleo').toLowerCase() && o.dt_conclusao) {
            fl_inscrito = true;
            self.model.set('id_arouca', o.id_arouca);
            self.model.set('url_certificado', o.url_certificado);
            return self.model.set('fl_concluinte', true);
          } else if (o.id_arouca === self.model.get('id_arouca') && !self.model.get('fl_concluinte')) {
            return fl_inscrito = true;
          }
        });
      }
      if (fl_inscrito || self.model.get("fl_concluinte")) {
        self.$el.find("input[value=" + self.model.get('id_arouca') + "]").prop('checked', true);
        self.ui.linkInscricao.hide();
        self.ui.flInscrito.addClass('check-success');
        if (self.model.get("fl_concluinte")) {
          return self.ui.flInscrito.html("<div style='margin-left: 7px;padding: 2px;'>Você já concluiu este conteúdo!</div>");
        }
      } else {
        self.ui.flInscrito.addClass('check-danger');
        return self.ui.linkInscricao.show();
      }
    };

    SincronizaProgressoView.prototype.onRender = function() {};

    return SincronizaProgressoView;

  })(Marionette.ItemView);
  return SincronizaProgressoView;
});
