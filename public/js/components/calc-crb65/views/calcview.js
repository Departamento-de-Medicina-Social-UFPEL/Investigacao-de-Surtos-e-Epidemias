// Generated by CoffeeScript 1.8.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['backbone', 'backbone.marionette', 'jknob'], function(Backbone, Marionette) {
  var Cbr65MainView;
  Cbr65MainView = (function(_super) {
    __extends(Cbr65MainView, _super);

    function Cbr65MainView() {
      return Cbr65MainView.__super__.constructor.apply(this, arguments);
    }

    Cbr65MainView.prototype.model = new Backbone.Model;

    Cbr65MainView.prototype.className = 'item calculadoras curb65';

    Cbr65MainView.prototype.template = '#calc-crb65-main-view';

    Cbr65MainView.prototype.ui = {
      'ureia': '#ureia',
      'ureiacont': '#divUreia',
      'semureia': '#semureia',
      'confusao': '#confusao',
      'respiratoria': '#respiratoria',
      'pressao': '#pressao',
      'idade': '#idade',
      'resultado': 'input.grafResult',
      'mortalidade': '.mortalidade',
      'descricao': '.descricao',
      'conduta': '.conduta',
      'nomeCalc': 'h3.titulo-calc .nomeCalc',
      'escoreBox': '.escoreBox',
      'condutaBox': '.condutaBox'
    };

    Cbr65MainView.prototype.events = {
      'change @ui.semureia': 'changeSemUreia',
      'change @ui.ureia, @ui.confusao, @ui.respiratoria, @ui.pressao, @ui.idade': 'changeDados'
    };

    Cbr65MainView.prototype.changeSemUreia = function(evt) {
      var max, opa, tit;
      max = 5;
      if (!this.ui.semureia.prop('checked')) {
        this.ui.ureia.removeAttr('disabled');
        tit = 'CURB-65';
        opa = 1;
      } else {
        this.ui.ureia.attr('disabled', true);
        max = 4;
        opa = .5;
      }
      this.ui.ureiacont.css({
        opacity: opa
      });
      this.ui.resultado.trigger('configure', {
        max: max
      });
      return this.changeDados();
    };

    Cbr65MainView.prototype.changeDados = function() {
      var dados, pontuacao, resultado, tab;
      dados = this.getDados();
      pontuacao = this.calculaEscore(dados);
      tab = this.tabela.curb;
      if (dados.semu) {
        tab = this.tabela.crb;
      }
      resultado = _(tab).find(function(item) {
        return item.pontos.indexOf(pontuacao) !== -1;
      });
      this.ui.resultado.val(pontuacao).trigger('change');
      this.ui.descricao.text(resultado.descricao);
      this.ui.mortalidade.text(resultado.mortalidade + '%');
      this.ui.conduta.text(resultado.conduta);
      this.ui.escoreBox.fadeIn();
      this.ui.condutaBox.fadeIn();
      return console.log(dados, pontuacao, tab, resultado);
    };

    Cbr65MainView.prototype.getDados = function() {
      return {
        c: this.ui.confusao.prop('checked'),
        u: this.ui.ureia.prop('checked'),
        r: this.ui.respiratoria.prop('checked'),
        b: this.ui.pressao.prop('checked'),
        i: this.ui.idade.prop('checked'),
        semu: this.ui.semureia.prop('checked')
      };
    };

    Cbr65MainView.prototype.calculaEscore = function(d) {
      var escore;
      escore = d.semu ? [d.c, d.r, d.b, d.i] : [d.c, d.u, d.r, d.b, d.i];
      escore = escore.reduce(function(mem, val) {
        if (val === true) {
          mem = mem + 1;
        }
        return mem;
      }, 0);
      return escore;
    };

    Cbr65MainView.prototype.tabela = {
      crb: [
        {
          pontos: [0],
          descricao: 'Mortalidade baixa',
          mortalidade: 1.2,
          conduta: 'Provável tratamento ambulatorial'
        }, {
          pontos: [1, 2],
          descricao: 'Mortalidade intermediária',
          mortalidade: 8.15,
          conduta: 'Avaliar tratamento hospitalar'
        }, {
          pontos: [3, 4],
          descricao: 'Mortalidade alta',
          mortalidade: 31,
          conduta: 'Hospitalização urgente'
        }
      ],
      curb: [
        {
          pontos: [0, 1],
          descricao: 'Mortalidade baixa',
          mortalidade: 1.5,
          conduta: 'Provável tratamento ambulatorial'
        }, {
          pontos: [2],
          descricao: 'Mortalidade intermediária',
          mortalidade: 9.2,
          conduta: 'Avaliar tratamento hospitalar'
        }, {
          pontos: [3, 4, 5],
          descricao: 'Mortalidade alta',
          mortalidade: 22,
          conduta: 'Hospitalização urgente'
        }
      ]
    };

    Cbr65MainView.prototype.setKnob = function(max) {
      if (max == null) {
        max = 5;
      }
      return this.ui.resultado.knob({
        width: "150",
        lineCap: 'round',
        inline: true,
        bgColor: "#f1f1f1",
        inputColor: "#444",
        max: max,
        thickness: ".2",
        readOnly: true,
        format: function(value) {
          console.log(value);
          return "" + value + "/" + max;
        }
      });
    };

    Cbr65MainView.prototype.onRender = function(view) {
      this.setKnob();
      this.ui.escoreBox.hide();
      return this.ui.condutaBox.hide();
    };

    return Cbr65MainView;

  })(Marionette.ItemView);
  return Cbr65MainView;
});
