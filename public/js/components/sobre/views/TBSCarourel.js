// Generated by CoffeeScript 1.8.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['marionette'], function(Marionette) {
  var CarouselCompView;
  CarouselCompView = (function(_super) {
    __extends(CarouselCompView, _super);

    function CarouselCompView() {
      return CarouselCompView.__super__.constructor.apply(this, arguments);
    }

    CarouselCompView.prototype['className'] = 'carousel slide';

    CarouselCompView.prototype['template'] = '#sobre-carousel';

    CarouselCompView.prototype['ui'] = {
      'left': '.left .carousel-control',
      'right': '.right .carousel-control',
      'indicators': '.carousel-indicators',
      'content': '.carousel-inner'
    };

    CarouselCompView.prototype['childViewContainer'] = '.carousel-inner';

    CarouselCompView.prototype['childView'] = Marionette.ItemView.extend({
      'className': 'item',
      'template': '#sobre-item'
    });

    CarouselCompView.prototype['onRender'] = function() {
      this.$el.attr({
        'id': 'sobre-slides'
      }).css({
        'height': $(window).innerHeight() / 2
      });
      console.log(this.$el.offset());
      return console.log('render');
    };

    return CarouselCompView;

  })(Marionette.CompositeView);
  return CarouselCompView;
});
