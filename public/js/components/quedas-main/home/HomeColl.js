// Generated by CoffeeScript 1.8.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['./quedaItemView', 'text!./quedaTemplate.html.ejs', 'utils'], function(QuedaItemView, quedasTemplate, utils) {
  var Quedas;
  Quedas = (function(_super) {
    __extends(Quedas, _super);

    function Quedas() {
      return Quedas.__super__.constructor.apply(this, arguments);
    }

    Quedas.prototype.className = 'item quedas container';

    Quedas.prototype.initialize = function() {
      return this.collection = App.quedas;
    };

    Quedas.prototype.template = function(data) {
      return _.template(quedasTemplate, data, {
        'variable': 'it'
      });
    };

    Quedas.prototype.childView = QuedaItemView;

    Quedas.prototype.childViewContainer = '.lista-quedas';

    Quedas.prototype.childEvents = {
      "render": function(evt, view) {
        var css, fl, nm;
        fl = view.model.get('folder');
        nm = view.model.get('nome');
        css = {
          'background': "url(img/" + fl + "/" + fl + "_fundo.png) cover no-repeat"
        };
        view.$el.attr('style', "background: url(img/" + fl + "/" + fl + "_fundo.png) center center no-repeat;\nbackground-size: cover;");
        view.$el.wrap("<a href='#queda/" + fl + "'></a>");
        return console.log(css);
      },
      "onItemClose": function() {
        return console.log('Queda onItemClose');
      }
    };

    Quedas.prototype.ui = {
      ok: 'ok'
    };

    Quedas.prototype.onRender = function() {
      return console.log('quedasModel', this.model);
    };

    return Quedas;

  })(Marionette.CompositeView);
  return Quedas;
});
