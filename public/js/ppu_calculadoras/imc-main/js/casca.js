// Generated by CoffeeScript 1.12.7
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

define('casca', function() {
  var Casca;
  Casca = (function(superClass) {
    extend(Casca, superClass);

    function Casca() {
      return Casca.__super__.constructor.apply(this, arguments);
    }

    Casca.prototype.start = function(options) {
      var andThen, classes, ref, rule, s, selector, self;
      self = this;
      self.trigger('beforeStart');
      this.addRegions({
        intro: '#introLayer',
        main: {
          selector: '#mainStage',
          regionClass: '.main'
        },
        footer: 'footer'
      });
      if (window.modulo.skipIntro) {
        this.hasIntro = false;
      }
      if (window.modulo.style) {
        classes = '';
        ref = window.modulo.style;
        for (selector in ref) {
          rule = ref[selector];
          s = (selector.indexOf('.') < 0) ? s = "." + selector : selector;
          classes += s + "{ " + (rule.join(';')) + " }";
        }
        $('head').append("<style>" + classes + "</style>");
      }
      this.main.firstShow = true;
      this.main.onShow = function() {
        if (!self.main.firstShow) {
          return;
        }
        if (self.user) {
          self.loadUserMenu();
        }
        $('body').fadeIn();
        $('.navbar-fixed-top .dropdown li a').on('click', function() {
          return $(this).parents('.navbar-collapse').collapse('hide');
        });
        return self.main.firstShow = false;
      };
      if (this.hasFooter) {
        this.footer.show(this.footerView);
      }
      if (this.hasIntro) {
        $('header').hide();
        $('footer').hide();
        $('body').fadeIn();
        this.intro.show(this.introView);
        andThen = function() {
          App.hasIntro = false;
          if (self.stopOnLoading) {
            return null;
          }
          $('header').fadeIn();
          $('footer').fadeIn();
          $('body').fadeIn();
          self.intro.empty();
          self.trigger('beforeHistoryStart');
          if (!Backbone.History.started) {
            return Backbone.history.start();
          }
        };
        return setTimeout(andThen, 6000);
      } else {
        $('body').fadeIn();
        self.trigger('beforeHistoryStart');
        if (!Backbone.History.started) {
          return Backbone.history.start();
        }
      }
    };

    return Casca;

  })(Marionette.Application);
  return Casca;
});
